// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 55;
	objects = {

/* Begin PBXBuildFile section */
		0E047212288FB1B900D2F087 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E047211288FB1B900D2F087 /* main.swift */; };
		0E04C4772C4AF8D900919390 /* LuckyNumbers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E04C4762C4AF8D900919390 /* LuckyNumbers.swift */; };
		0E05DB1428FDBA84008A8450 /* SearchRotatedArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB1328FDBA84008A8450 /* SearchRotatedArray.swift */; };
		0E05DB1628FF0A2A008A8450 /* FindMin.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB1528FF0A2A008A8450 /* FindMin.swift */; };
		0E05DB1A29005F88008A8450 /* CalPoints.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB1929005F88008A8450 /* CalPoints.swift */; };
		0E05DB1C29006F48008A8450 /* EvalRPN.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB1B29006F48008A8450 /* EvalRPN.swift */; };
		0E05DB1E2901BFF6008A8450 /* DailyTemperatures.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB1D2901BFF6008A8450 /* DailyTemperatures.swift */; };
		0E05DB2029025B75008A8450 /* ScoreOfParentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB1F29025B75008A8450 /* ScoreOfParentheses.swift */; };
		0E05DB242907EB4D008A8450 /* BackspaceCompare.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB232907EB4D008A8450 /* BackspaceCompare.swift */; };
		0E05DB262907EE6B008A8450 /* RemoveOuterParentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E05DB252907EE6B008A8450 /* RemoveOuterParentheses.swift */; };
		0E0697F028C9B802008DF1BC /* Has3Divisors.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0697EF28C9B802008DF1BC /* Has3Divisors.swift */; };
		0E0697F228C9B957008DF1BC /* MergeTwoSortedLists.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0697F128C9B957008DF1BC /* MergeTwoSortedLists.swift */; };
		0E0697F428CAEEBB008DF1BC /* SwapPairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0697F328CAEEBB008DF1BC /* SwapPairs.swift */; };
		0E06B5E1290A95A800A2782B /* RemoveAdjacentDuplicates.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E06B5E0290A95A800A2782B /* RemoveAdjacentDuplicates.swift */; };
		0E077A872B70FAA200FDE0E9 /* SortColors.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A862B70FAA200FDE0E9 /* SortColors.swift */; };
		0E077A8A2B70FF9F00FDE0E9 /* BubbleSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A892B70FF9F00FDE0E9 /* BubbleSort.swift */; };
		0E077A8C2B71A57900FDE0E9 /* SelectionSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A8B2B71A57900FDE0E9 /* SelectionSort.swift */; };
		0E077A8E2B72238C00FDE0E9 /* GroupAnagrams.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A8D2B72238C00FDE0E9 /* GroupAnagrams.swift */; };
		0E077A902B725A2F00FDE0E9 /* SumRootToLeafNumbers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A8F2B725A2F00FDE0E9 /* SumRootToLeafNumbers.swift */; };
		0E077A922B7266CA00FDE0E9 /* InsertionSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A912B7266CA00FDE0E9 /* InsertionSort.swift */; };
		0E077A942B729B1A00FDE0E9 /* MaximumGap.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E077A932B729B1A00FDE0E9 /* MaximumGap.swift */; };
		0E0C53192C44D59900935F55 /* CreateBinaryTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0C53182C44D59900935F55 /* CreateBinaryTree.swift */; };
		0E0E4ADA290C209600138BB8 /* FinalPrices.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0E4AD9290C209600138BB8 /* FinalPrices.swift */; };
		0E0EBEA2293F862B00C9F071 /* HasPathSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0EBEA1293F862B00C9F071 /* HasPathSum.swift */; };
		0E0EBEA429405F6800C9F071 /* BinaryTreePaths.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E0EBEA329405F6800C9F071 /* BinaryTreePaths.swift */; };
		0E1159C6290E833E005F573C /* ContainsNearbyDuplicate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1159C5290E833E005F573C /* ContainsNearbyDuplicate.swift */; };
		0E1159CA290FAAC3005F573C /* BinarySearchTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1159C9290FAAC3005F573C /* BinarySearchTree.swift */; };
		0E1159CD290FAB1D005F573C /* IsValidBST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1159CC290FAB1D005F573C /* IsValidBST.swift */; };
		0E1159D0290FAE0E005F573C /* InorderTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1159CF290FAE0E005F573C /* InorderTraversal.swift */; };
		0E1159D2291181C0005F573C /* PreorderTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1159D1291181C0005F573C /* PreorderTraversal.swift */; };
		0E1159D62912A413005F573C /* PostOrderTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1159D52912A413005F573C /* PostOrderTraversal.swift */; };
		0E137282293863D0004445B1 /* IsSameTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E137281293863D0004445B1 /* IsSameTree.swift */; };
		0E1372892939DA1A004445B1 /* ZigzagLevelOrder.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E1372882939DA1A004445B1 /* ZigzagLevelOrder.swift */; };
		0E18A5862B75913D002A7311 /* MergeIntervals.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E18A5852B75913D002A7311 /* MergeIntervals.swift */; };
		0E18A58A2B765024002A7311 /* LargestDivisibleSubset.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E18A5892B765024002A7311 /* LargestDivisibleSubset.swift */; };
		0E18A58C2B778DEE002A7311 /* PalindromicSubstrings.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E18A58B2B778DED002A7311 /* PalindromicSubstrings.swift */; };
		0E18A58F2B77F736002A7311 /* BasicCalculatorII.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E18A58E2B77F736002A7311 /* BasicCalculatorII.swift */; };
		0E18A5912B794BFA002A7311 /* CherryPickupII.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E18A5902B794BFA002A7311 /* CherryPickupII.swift */; };
		0E25432A2B72C8410017DBF4 /* HeapSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2543292B72C8410017DBF4 /* HeapSort.swift */; };
		0E25432D2B72DD1E0017DBF4 /* MergeSortedArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E25432C2B72DD1E0017DBF4 /* MergeSortedArray.swift */; };
		0E25432F2B72FF8E0017DBF4 /* SortArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E25432E2B72FF8E0017DBF4 /* SortArray.swift */; };
		0E2543312B730ADD0017DBF4 /* SortCharactersByFrequency.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2543302B730ADD0017DBF4 /* SortCharactersByFrequency.swift */; };
		0E2543332B7318190017DBF4 /* MergeSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2543322B7318190017DBF4 /* MergeSort.swift */; };
		0E2543352B73B8850017DBF4 /* QuickSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2543342B73B8850017DBF4 /* QuickSort.swift */; };
		0E25433B2B74E9130017DBF4 /* PerfectSquares.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E25433A2B74E9130017DBF4 /* PerfectSquares.swift */; };
		0E2A551928D8C9DA00A5ACE1 /* MyQueue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2A551828D8C9DA00A5ACE1 /* MyQueue.swift */; };
		0E2A551C28D8CE9000A5ACE1 /* MyStack.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2A551B28D8CE9000A5ACE1 /* MyStack.swift */; };
		0E2A551E28D8CF4800A5ACE1 /* Queue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2A551D28D8CF4700A5ACE1 /* Queue.swift */; };
		0E2A552028D8D55500A5ACE1 /* MinTimeToType.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2A551F28D8D55500A5ACE1 /* MinTimeToType.swift */; };
		0E2A552228DA0AB900A5ACE1 /* CountMatches.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2A552128DA0AB900A5ACE1 /* CountMatches.swift */; };
		0E2B99DC28F98EE70080561E /* KWeakestRows.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2B99DB28F98EE70080561E /* KWeakestRows.swift */; };
		0E2B99DE28F99DF40080561E /* CheckIfExist.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2B99DD28F99DF40080561E /* CheckIfExist.swift */; };
		0E2B99E028F9A0AF0080561E /* JudgeSquareSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2B99DF28F9A0AF0080561E /* JudgeSquareSum.swift */; };
		0E2B99E228FC6F0C0080561E /* MaxDistance.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E2B99E128FC6F0C0080561E /* MaxDistance.swift */; };
		0E3122AB2C3D5D3B001B3464 /* AverageWaitingTime.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3122AA2C3D5D3B001B3464 /* AverageWaitingTime.swift */; };
		0E3122AD2C3E6FEF001B3464 /* CrawlerLogFolder.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3122AC2C3E6FEF001B3464 /* CrawlerLogFolder.swift */; };
		0E35825E2B5DEA7500EE03BB /* SetMismatch.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E35825D2B5DEA7500EE03BB /* SetMismatch.swift */; };
		0E3582692B5F2E2B00EE03BB /* GenerateParentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3582682B5F2E2B00EE03BB /* GenerateParentheses.swift */; };
		0E35826B2B6044A000EE03BB /* MaxLength.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E35826A2B6044A000EE03BB /* MaxLength.swift */; };
		0E35826D2B60C38000EE03BB /* PseudoPalindromicPaths.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E35826C2B60C38000EE03BB /* PseudoPalindromicPaths.swift */; };
		0E35826F2B630DC200EE03BB /* LongestCommonSubsequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E35826E2B630DC200EE03BB /* LongestCommonSubsequence.swift */; };
		0E3582712B63F6E500EE03BB /* OutBoundaryPaths.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3582702B63F6E400EE03BB /* OutBoundaryPaths.swift */; };
		0E3582742B659BC200EE03BB /* KInversePairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3582732B659BC200EE03BB /* KInversePairs.swift */; };
		0E3582772B66743900EE03BB /* DefuseBomb.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3582762B66743900EE03BB /* DefuseBomb.swift */; };
		0E3CDA4F2913F8DC0094D139 /* IsStrictlyPalindromic.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E3CDA4E2913F8DC0094D139 /* IsStrictlyPalindromic.swift */; };
		0E465C91293B4E84006CCDDF /* IsSymmetricTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E465C90293B4E84006CCDDF /* IsSymmetricTree.swift */; };
		0E4F83C12C2C54D800AA22BD /* BalanceBST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E4F83C02C2C54D800AA22BD /* BalanceBST.swift */; };
		0E5B5ADB2BF5E2EB00BBAC2D /* CombinationSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E5B5ADA2BF5E2EB00BBAC2D /* CombinationSum.swift */; };
		0E5B5ADD2BFE6EB000BBAC2D /* PalindromePartitioning.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E5B5ADC2BFE6EB000BBAC2D /* PalindromePartitioning.swift */; };
		0E5B5ADF2C00A0FF00BBAC2D /* Subsets.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E5B5ADE2C00A0FF00BBAC2D /* Subsets.swift */; };
		0E5FFAA028E6094200EB8C00 /* SearchMatrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E5FFA9F28E6094200EB8C00 /* SearchMatrix.swift */; };
		0E613B9428E723900050D79B /* MaxNumberOfBalloons.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E613B9328E723900050D79B /* MaxNumberOfBalloons.swift */; };
		0E613B9628E8A14A0050D79B /* DiagonalSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E613B9528E8A14A0050D79B /* DiagonalSum.swift */; };
		0E613B9828E98F1C0050D79B /* SetZeroes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E613B9728E98F1C0050D79B /* SetZeroes.swift */; };
		0E613B9A28E9F33B0050D79B /* LastStoneWeight.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E613B9928E9F33B0050D79B /* LastStoneWeight.swift */; };
		0E6580FB2B6AF98700BE3C59 /* MinDepth.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6580FA2B6AF98700BE3C59 /* MinDepth.swift */; };
		0E6580FE2B6B849E00BE3C59 /* BinaryTreeMaximumPathSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6580FD2B6B849E00BE3C59 /* BinaryTreeMaximumPathSum.swift */; };
		0E6581002B6BF4D300BE3C59 /* DivideArrayIntoArraysWithMaxDifference.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6580FF2B6BF4D300BE3C59 /* DivideArrayIntoArraysWithMaxDifference.swift */; };
		0E6581022B6D71CE00BE3C59 /* SequentialDigits.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581012B6D71CE00BE3C59 /* SequentialDigits.swift */; };
		0E65811E2B6EEFE400BE3C59 /* MaxSumAfterPartitioning.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E65811D2B6EEFE400BE3C59 /* MaxSumAfterPartitioning.swift */; };
		0E6581212B70239300BE3C59 /* MinWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581202B70239300BE3C59 /* MinWindow.swift */; };
		0E6581232B7034ED00BE3C59 /* MinHeap.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581222B7034ED00BE3C59 /* MinHeap.swift */; };
		0E6581252B70521E00BE3C59 /* FindKthLargest.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581242B70521E00BE3C59 /* FindKthLargest.swift */; };
		0E6581292B70558000BE3C59 /* MaxHeap.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581282B70558000BE3C59 /* MaxHeap.swift */; };
		0E65812C2B7058D200BE3C59 /* ThirdMax.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E65812B2B7058D200BE3C59 /* ThirdMax.swift */; };
		0E65812E2B705B8700BE3C59 /* NthUglyNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E65812D2B705B8700BE3C59 /* NthUglyNumber.swift */; };
		0E6581312B70654700BE3C59 /* FirstUniqChar.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581302B70654700BE3C59 /* FirstUniqChar.swift */; };
		0E6581342B7066C400BE3C59 /* IsUgly.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6581332B7066C400BE3C59 /* IsUgly.swift */; };
		0E664ECA2C0572CE005C397A /* EqualSubstring.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E664EC92C0572CE005C397A /* EqualSubstring.swift */; };
		0E68C1752B51ACAB00AF6B1D /* DeleteNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68C1742B51ACAB00AF6B1D /* DeleteNode.swift */; };
		0E68C1772B51B77B00AF6B1D /* OddEvenLinkedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68C1762B51B77B00AF6B1D /* OddEvenLinkedList.swift */; };
		0E68C1792B53113300AF6B1D /* FindSubstring.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68C1782B53113300AF6B1D /* FindSubstring.swift */; };
		0E68F94728DD4E0500C4BCDF /* AddDigits.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68F94628DD4E0500C4BCDF /* AddDigits.swift */; };
		0E68F94B28DDEA9500C4BCDF /* ConvertToBase7.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68F94A28DDEA9500C4BCDF /* ConvertToBase7.swift */; };
		0E68F94D28DF633700C4BCDF /* CanMakeArithmeticProgression.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68F94C28DF633700C4BCDF /* CanMakeArithmeticProgression.swift */; };
		0E68F94F28E0B80000C4BCDF /* IsPowerOfTwo.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E68F94E28E0B80000C4BCDF /* IsPowerOfTwo.swift */; };
		0E6C1AB428E2042D009FC596 /* NumOfStrings.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E6C1AB328E2042D009FC596 /* NumOfStrings.swift */; };
		0E71D62328F2A9B0004F5F84 /* ArrangeCoins.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E71D62228F2A9B0004F5F84 /* ArrangeCoins.swift */; };
		0E71D66B28F50CD2004F5F84 /* FindKthPositive.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E71D66A28F50CD2004F5F84 /* FindKthPositive.swift */; };
		0E71D66D28F5CBCD004F5F84 /* SpecialArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E71D66C28F5CBCD004F5F84 /* SpecialArray.swift */; };
		0E74E3432C302768007CECD7 /* GetAncestors.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E74E3422C302768007CECD7 /* GetAncestors.swift */; };
		0E74E3472C326254007CECD7 /* ThreeConsecutiveOdds.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E74E3462C326254007CECD7 /* ThreeConsecutiveOdds.swift */; };
		0E75B1FF28F01DF500627484 /* NextGreatestLetter.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E75B1FE28F01DF500627484 /* NextGreatestLetter.swift */; };
		0E7938F128E35B24008B5966 /* HammingWeight.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7938F028E35B24008B5966 /* HammingWeight.swift */; };
		0E79D2F728E4B73000B85F22 /* PivotArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E79D2F628E4B73000B85F22 /* PivotArray.swift */; };
		0E79D2F928E4BA0A00B85F22 /* MaxWidthOfVerticalArea.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E79D2F828E4BA0A00B85F22 /* MaxWidthOfVerticalArea.swift */; };
		0E7E09D52B799D4700ACC593 /* TopKFrequentElements.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E09D42B799D4700ACC593 /* TopKFrequentElements.swift */; };
		0E7E09D72B79AB3F00ACC593 /* RadixSort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E09D62B79AB3F00ACC593 /* RadixSort.swift */; };
		0E7E09D92B7A26C600ACC593 /* MajorityElement.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E09D82B7A26C600ACC593 /* MajorityElement.swift */; };
		0E7E09DD2B7AF36300ACC593 /* FindFirstPalindromicString.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E09DC2B7AF36300ACC593 /* FindFirstPalindromicString.swift */; };
		0E7E09E42B7C40F500ACC593 /* RearrangeArrayElements.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E09E32B7C40F500ACC593 /* RearrangeArrayElements.swift */; };
		0E7E09E62B7CDE0400ACC593 /* LRUCache.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E09E52B7CDE0400ACC593 /* LRUCache.swift */; };
		0E7E0A0A2B7D912C00ACC593 /* PolygonWithLargestPerimeter.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E0A092B7D912C00ACC593 /* PolygonWithLargestPerimeter.swift */; };
		0E7E0A0C2B7F8BAF00ACC593 /* LeastNumberUniqueIntegers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E7E0A0B2B7F8BAF00ACC593 /* LeastNumberUniqueIntegers.swift */; };
		0E850DF128BF1A6A005C6923 /* IntersectionLinkedLists.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E850DF028BF1A6A005C6923 /* IntersectionLinkedLists.swift */; };
		0E94DD822B4D693B00C7C118 /* UniquePaths.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E94DD812B4D693B00C7C118 /* UniquePaths.swift */; };
		0E95CCFF2B551DC000C5AB8A /* SearchRotatedArray2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CCFE2B551DC000C5AB8A /* SearchRotatedArray2.swift */; };
		0E95CD022B55511000C5AB8A /* FindWinners.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD012B55511000C5AB8A /* FindWinners.swift */; };
		0E95CD052B568BCF00C5AB8A /* ReverseBits.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD042B568BCF00C5AB8A /* ReverseBits.swift */; };
		0E95CD072B56907400C5AB8A /* XorOperation.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD062B56907400C5AB8A /* XorOperation.swift */; };
		0E95CD092B569F0400C5AB8A /* RangeBitwiseAnd.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD082B569F0400C5AB8A /* RangeBitwiseAnd.swift */; };
		0E95CD0B2B56A0C800C5AB8A /* RandomizedSet.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD0A2B56A0C800C5AB8A /* RandomizedSet.swift */; };
		0E95CD0E2B56E0E100C5AB8A /* MinBitFlips.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD0D2B56E0E100C5AB8A /* MinBitFlips.swift */; };
		0E95CD102B56E3BD00C5AB8A /* SingleNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD0F2B56E3BD00C5AB8A /* SingleNumber.swift */; };
		0E95CD252B57DAAA00C5AB8A /* UniqueOccurrences.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD242B57DAAA00C5AB8A /* UniqueOccurrences.swift */; };
		0E95CD282B57FC8200C5AB8A /* MaxDepthTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD272B57FC8200C5AB8A /* MaxDepthTree.swift */; };
		0E95CD2B2B59CEAA00C5AB8A /* ClimbStairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD2A2B59CEAA00C5AB8A /* ClimbStairs.swift */; };
		0E95CD2E2B5AE44900C5AB8A /* MinFallingPathSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD2D2B5AE44900C5AB8A /* MinFallingPathSum.swift */; };
		0E95CD302B5B640500C5AB8A /* SumSubarrayMins.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD2F2B5B640500C5AB8A /* SumSubarrayMins.swift */; };
		0E95CD322B5C25A000C5AB8A /* EvaluateTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD312B5C25A000C5AB8A /* EvaluateTree.swift */; };
		0E95CD342B5C2D7000C5AB8A /* MergeTrees.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD332B5C2D7000C5AB8A /* MergeTrees.swift */; };
		0E95CD362B5C9D2600C5AB8A /* RobHouse.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD352B5C9D2600C5AB8A /* RobHouse.swift */; };
		0E95CD382B5D574600C5AB8A /* NumTrees.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E95CD372B5D574600C5AB8A /* NumTrees.swift */; };
		0E9C37362915226400DD5D39 /* DeepestLeavesSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C37352915226400DD5D39 /* DeepestLeavesSum.swift */; };
		0E9C373829152DD900DD5D39 /* AverageOfSubtree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C373729152DD900DD5D39 /* AverageOfSubtree.swift */; };
		0E9C373A29179A8300DD5D39 /* RangeSumBST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C373929179A8300DD5D39 /* RangeSumBST.swift */; };
		0E9C373C291962F300DD5D39 /* SearchBST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C373B291962F300DD5D39 /* SearchBST.swift */; };
		0E9C373E291AE34600DD5D39 /* IsToeplitzMatrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C373D291AE34600DD5D39 /* IsToeplitzMatrix.swift */; };
		0E9C3740291BD4CE00DD5D39 /* SumRootToLeaf.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C373F291BD4CE00DD5D39 /* SumRootToLeaf.swift */; };
		0E9C3742291BDD5800DD5D39 /* CheckTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C3741291BDD5800DD5D39 /* CheckTree.swift */; };
		0E9C3744291E062100DD5D39 /* SumEvenGrandparent.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C3743291E062100DD5D39 /* SumEvenGrandparent.swift */; };
		0E9C37462920161500DD5D39 /* IncreasingBST.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C37452920161500DD5D39 /* IncreasingBST.swift */; };
		0E9C37482921618600DD5D39 /* BstToGst.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0E9C37472921618600DD5D39 /* BstToGst.swift */; };
		0EA44E232B8AB9B1000316C9 /* FindPathExists.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E222B8AB9B1000316C9 /* FindPathExists.swift */; };
		0EA44E252B8BC0B9000316C9 /* CheapestFlightsWithinKStops.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E242B8BC0B9000316C9 /* CheapestFlightsWithinKStops.swift */; };
		0EA44E272B8BFBFF000316C9 /* FindAllPeopleWithSecret.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E262B8BFBFF000316C9 /* FindAllPeopleWithSecret.swift */; };
		0EA44E292B8CE7A9000316C9 /* GreatestCommonDivisorTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E282B8CE7A9000316C9 /* GreatestCommonDivisorTraversal.swift */; };
		0EA44E2B2B8CFFDF000316C9 /* RemoveDuplicatesfromSortedArrayII.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E2A2B8CFFDF000316C9 /* RemoveDuplicatesfromSortedArrayII.swift */; };
		0EA44E2D2B8D47B6000316C9 /* FactorialTrailingZeroes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E2C2B8D47B6000316C9 /* FactorialTrailingZeroes.swift */; };
		0EA44E2F2B8DE2F3000316C9 /* DiameterBinaryTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E2E2B8DE2F3000316C9 /* DiameterBinaryTree.swift */; };
		0EA44E312B8DEAA5000316C9 /* Number of Islands.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E302B8DEAA5000316C9 /* Number of Islands.swift */; };
		0EA44E332B8FC4BD000316C9 /* FindBottomLeftTreeValue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E322B8FC4BD000316C9 /* FindBottomLeftTreeValue.swift */; };
		0EA44E352B8FE6F9000316C9 /* SurroundedRegions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E342B8FE6F9000316C9 /* SurroundedRegions.swift */; };
		0EA44E372B8FF945000316C9 /* CloneGraph.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E362B8FF945000316C9 /* CloneGraph.swift */; };
		0EA44E392B9001E5000316C9 /* EvenOddTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA44E382B9001E5000316C9 /* EvenOddTree.swift */; };
		0EA489DD2C358C8E00B588EF /*  MinimumDifferenceBetweenLargestSmallest3.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA489DC2C358C8E00B588EF /*  MinimumDifferenceBetweenLargestSmallest3.swift */; };
		0EA489DF2C368B8800B588EF /* MergeNodes.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA489DE2C368B8800B588EF /* MergeNodes.swift */; };
		0EA489E12C39016E00B588EF /* PassThePillow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA489E02C39016E00B588EF /* PassThePillow.swift */; };
		0EA917812C33DBDB009A1D0D /* IntersectionTwoArrays.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA917802C33DBDB009A1D0D /* IntersectionTwoArrays.swift */; };
		0EA9D7DA28CF742E0051F73E /* RemoveElements.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EA9D7D928CF742E0051F73E /* RemoveElements.swift */; };
		0EABD2FA28CCD3C200415039 /* LongestPalindrome.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EABD2F928CCD3C200415039 /* LongestPalindrome.swift */; };
		0EABD2FC28CCE5D400415039 /* Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EABD2FB28CCE5D400415039 /* Extensions.swift */; };
		0EABD30028CDBE7E00415039 /* Sqrt.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EABD2FF28CDBE7E00415039 /* Sqrt.swift */; };
		0EB326D028BC836300DD597C /* DeleteMiddleNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB326CF28BC836300DD597C /* DeleteMiddleNode.swift */; };
		0EB326D428BDA4C600DD597C /* PartitionList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB326D328BDA4C600DD597C /* PartitionList.swift */; };
		0EB326D628BDADFF00DD597C /* AddTwoNumbers.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB326D528BDADFF00DD597C /* AddTwoNumbers.swift */; };
		0EB326DA28BDCA9000DD597C /* PalindromeLinkedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB326D928BDCA9000DD597C /* PalindromeLinkedList.swift */; };
		0EB8981828B46DF000D269E0 /* ListNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8981728B46DF000D269E0 /* ListNode.swift */; };
		0EB8981A28B46FA900D269E0 /* DeleteDuplicatesLinkedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8981928B46FA900D269E0 /* DeleteDuplicatesLinkedList.swift */; };
		0EB8981C28B4750300D269E0 /* DeleteDuplicatesLinkedList2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8981B28B4750300D269E0 /* DeleteDuplicatesLinkedList2.swift */; };
		0EB8CBC3292FE115003AF795 /* MinSetSize.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8CBC2292FE115003AF795 /* MinSetSize.swift */; };
		0EB8CBC629321A85003AF795 /* FindTheWinner.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8CBC529321A85003AF795 /* FindTheWinner.swift */; };
		0EB8CBC829338F54003AF795 /* Graph.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8CBC729338F54003AF795 /* Graph.swift */; };
		0EB8CBCB29339B59003AF795 /* FindCenter.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8CBCA29339B59003AF795 /* FindCenter.swift */; };
		0EB8CBCD2935D0EB003AF795 /* LevelOrder.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EB8CBCC2935D0EB003AF795 /* LevelOrder.swift */; };
		0EBA13002C07AC69001CABA1 /* NumSteps.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA12FF2C07AC69001CABA1 /* NumSteps.swift */; };
		0EBA131F2C0C9EF9001CABA1 /* ScoreOfString.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA131E2C0C9EF9001CABA1 /* ScoreOfString.swift */; };
		0EBA13212C0CA0D4001CABA1 /* SingleNumberIII.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA13202C0CA0D4001CABA1 /* SingleNumberIII.swift */; };
		0EBA13482C0ED0F0001CABA1 /* LongestPalindromeEasy.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA13472C0ED0F0001CABA1 /* LongestPalindromeEasy.swift */; };
		0EBA134A2C11E18E001CABA1 /* CommonChars.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA13492C11E18E001CABA1 /* CommonChars.swift */; };
		0EBA134E2C136B9D001CABA1 /* ReplaceWords.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA134D2C136B9D001CABA1 /* ReplaceWords.swift */; };
		0EBA13512C1488F4001CABA1 /* CheckSubarraySum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBA13502C1488F4001CABA1 /* CheckSubarraySum.swift */; };
		0EBB251029425A37005BEABE /* PathSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBB250F29425A37005BEABE /* PathSum.swift */; };
		0EBB251329451253005BEABE /* Interpret.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBB251229451253005BEABE /* Interpret.swift */; };
		0EBBB7B628D0E1BB00E8FD5E /* DivideArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBBB7B528D0E1BB00E8FD5E /* DivideArray.swift */; };
		0EBBB7B828D0E40100E8FD5E /* FindFinalValue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBBB7B728D0E40100E8FD5E /* FindFinalValue.swift */; };
		0EBBB7BA28D0E69400E8FD5E /* DominantIndex.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBBB7B928D0E69400E8FD5E /* DominantIndex.swift */; };
		0EBBB7BC28D161F700E8FD5E /* ReverseLinkedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBBB7BB28D161F700E8FD5E /* ReverseLinkedList.swift */; };
		0EBBB7BE28D166FF00E8FD5E /* KthDistinctString.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EBBB7BD28D166FF00E8FD5E /* KthDistinctString.swift */; };
		0EC89C6A28DB782400ABC524 /* DecodeString.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC89C6928DB782400ABC524 /* DecodeString.swift */; };
		0EC89C6C28DB7D8D00ABC524 /* SummaryRanges.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC89C6B28DB7D8D00ABC524 /* SummaryRanges.swift */; };
		0EC97E282B80FBBD009E7C84 /* MaximumNumberOperationsWithSameScore.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E272B80FBBD009E7C84 /* MaximumNumberOperationsWithSameScore.swift */; };
		0EC97E2A2B80FDAD009E7C84 /* ApplyOperationstoMakeStringEmpty.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E292B80FDAD009E7C84 /* ApplyOperationstoMakeStringEmpty.swift */; };
		0EC97E2C2B81040E009E7C84 /* Maximum Number of Operations With the Same Score II.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E2B2B81040E009E7C84 /* Maximum Number of Operations With the Same Score II.swift */; };
		0EC97E2F2B8144B5009E7C84 /* FurthestBuildingYouCanReach.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E2E2B8144B5009E7C84 /* FurthestBuildingYouCanReach.swift */; };
		0EC97E312B82C008009E7C84 /* MeetingRoomsIII.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E302B82C008009E7C84 /* MeetingRoomsIII.swift */; };
		0EC97E332B852AAC009E7C84 /* MissingNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E322B852AAC009E7C84 /* MissingNumber.swift */; };
		0EC97E452B872B4B009E7C84 /* TownJudge.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E442B872B4B009E7C84 /* TownJudge.swift */; };
		0EC97E482B8731E5009E7C84 /* AllPathsFromSourceTarget.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC97E472B8731E5009E7C84 /* AllPathsFromSourceTarget.swift */; };
		0EC9C2C72B668F020062956C /* FindDuplicateNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC9C2C62B668F020062956C /* FindDuplicateNumber.swift */; };
		0EC9C2C92B670BD30062956C /* GenerateTrees.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC9C2C82B670BD30062956C /* GenerateTrees.swift */; };
		0EC9C2CB2B67B93D0062956C /* RecoverTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC9C2CA2B67B93D0062956C /* RecoverTree.swift */; };
		0EC9C2CD2B67D8680062956C /* ConstructBinaryTreeFromInorderPostorderTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EC9C2CC2B67D8680062956C /* ConstructBinaryTreeFromInorderPostorderTraversal.swift */; };
		0ECF33142C1E1FBD002553E1 /* MinIncrementForUnique.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0ECF33132C1E1FBD002553E1 /* MinIncrementForUnique.swift */; };
		0ED9382C2922C3A9005D4A6C /* BuildTree.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0ED9382B2922C3A9005D4A6C /* BuildTree.swift */; };
		0ED9382F2922C687005D4A6C /* FindTheDifference.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0ED9382E2922C687005D4A6C /* FindTheDifference.swift */; };
		0ED9383229267C92005D4A6C /* FinalValueAfterOperations.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0ED9383129267C92005D4A6C /* FinalValueAfterOperations.swift */; };
		0ED9383429295BE9005D4A6C /* MaximumWealth.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0ED9383329295BE9005D4A6C /* MaximumWealth.swift */; };
		0ED93836292A1DF6005D4A6C /* InsertIntoBSTAVL.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0ED93835292A1DF6005D4A6C /* InsertIntoBSTAVL.swift */; };
		0EDABC58293E75BE00612263 /* MaxDepth.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EDABC57293E75BE00612263 /* MaxDepth.swift */; };
		0EEED4D128F64B0A0073235A /* CountNegatives.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EEED4D028F64B0A0073235A /* CountNegatives.swift */; };
		0EF1DF4D28D6B4100044FEBD /* ReorderList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF1DF4C28D6B4100044FEBD /* ReorderList.swift */; };
		0EF534DB28EB3B8E0023A8DB /* CheckAlmostEquivalent.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534DA28EB3B8E0023A8DB /* CheckAlmostEquivalent.swift */; };
		0EF534E028EBDC780023A8DB /* SearchBinary.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534DF28EBDC780023A8DB /* SearchBinary.swift */; };
		0EF534E228EBE1CA0023A8DB /* GuessNumber.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534E128EBE1CA0023A8DB /* GuessNumber.swift */; };
		0EF534E428EBE49D0023A8DB /* SearchInsert.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534E328EBE49D0023A8DB /* SearchInsert.swift */; };
		0EF534E728EBEB9F0023A8DB /* PeakIndexInMountainArray.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534E628EBEB9F0023A8DB /* PeakIndexInMountainArray.swift */; };
		0EF534EB28EDA2790023A8DB /* IsPerfectSquare.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534EA28EDA2790023A8DB /* IsPerfectSquare.swift */; };
		0EF534ED28EDABBA0023A8DB /* FindTheDistanceValue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534EC28EDABBA0023A8DB /* FindTheDistanceValue.swift */; };
		0EF534EF28EDCFE60023A8DB /* FirstBadVersion.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534EE28EDCFE60023A8DB /* FirstBadVersion.swift */; };
		0EF534F128EDD4BE0023A8DB /* SearchRange.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EF534F028EDD4BE0023A8DB /* SearchRange.swift */; };
		0EFDA3BB28D4DC9C009C424D /* JudgeCircle.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EFDA3BA28D4DC9C009C424D /* JudgeCircle.swift */; };
		0EFDA3BE28D564F5009C424D /* GetMin.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EFDA3BD28D564F5009C424D /* GetMin.swift */; };
		0EFDA3C028D56529009C424D /* Stack.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0EFDA3BF28D56529009C424D /* Stack.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		0E04720C288FB1B900D2F087 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		0E04720E288FB1B900D2F087 /* LeetCode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = LeetCode; sourceTree = BUILT_PRODUCTS_DIR; };
		0E047211288FB1B900D2F087 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		0E04721A288FB3CB00D2F087 /* LeetCode.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = LeetCode.playground; sourceTree = "<group>"; xcLanguageSpecificationIdentifier = xcode.lang.swift; };
		0E04C4762C4AF8D900919390 /* LuckyNumbers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LuckyNumbers.swift; sourceTree = "<group>"; };
		0E05DB1328FDBA84008A8450 /* SearchRotatedArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchRotatedArray.swift; sourceTree = "<group>"; };
		0E05DB1528FF0A2A008A8450 /* FindMin.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindMin.swift; sourceTree = "<group>"; };
		0E05DB1929005F88008A8450 /* CalPoints.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CalPoints.swift; sourceTree = "<group>"; };
		0E05DB1B29006F48008A8450 /* EvalRPN.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EvalRPN.swift; sourceTree = "<group>"; };
		0E05DB1D2901BFF6008A8450 /* DailyTemperatures.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DailyTemperatures.swift; sourceTree = "<group>"; };
		0E05DB1F29025B75008A8450 /* ScoreOfParentheses.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ScoreOfParentheses.swift; sourceTree = "<group>"; };
		0E05DB232907EB4D008A8450 /* BackspaceCompare.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BackspaceCompare.swift; sourceTree = "<group>"; };
		0E05DB252907EE6B008A8450 /* RemoveOuterParentheses.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveOuterParentheses.swift; sourceTree = "<group>"; };
		0E0697EF28C9B802008DF1BC /* Has3Divisors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Has3Divisors.swift; sourceTree = "<group>"; };
		0E0697F128C9B957008DF1BC /* MergeTwoSortedLists.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeTwoSortedLists.swift; sourceTree = "<group>"; };
		0E0697F328CAEEBB008DF1BC /* SwapPairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwapPairs.swift; sourceTree = "<group>"; };
		0E06B5E0290A95A800A2782B /* RemoveAdjacentDuplicates.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveAdjacentDuplicates.swift; sourceTree = "<group>"; };
		0E077A862B70FAA200FDE0E9 /* SortColors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortColors.swift; sourceTree = "<group>"; };
		0E077A892B70FF9F00FDE0E9 /* BubbleSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BubbleSort.swift; sourceTree = "<group>"; };
		0E077A8B2B71A57900FDE0E9 /* SelectionSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SelectionSort.swift; sourceTree = "<group>"; };
		0E077A8D2B72238C00FDE0E9 /* GroupAnagrams.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GroupAnagrams.swift; sourceTree = "<group>"; };
		0E077A8F2B725A2F00FDE0E9 /* SumRootToLeafNumbers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SumRootToLeafNumbers.swift; sourceTree = "<group>"; };
		0E077A912B7266CA00FDE0E9 /* InsertionSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = InsertionSort.swift; sourceTree = "<group>"; };
		0E077A932B729B1A00FDE0E9 /* MaximumGap.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaximumGap.swift; sourceTree = "<group>"; };
		0E0C53182C44D59900935F55 /* CreateBinaryTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CreateBinaryTree.swift; sourceTree = "<group>"; };
		0E0E4AD9290C209600138BB8 /* FinalPrices.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FinalPrices.swift; sourceTree = "<group>"; };
		0E0EBEA1293F862B00C9F071 /* HasPathSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HasPathSum.swift; sourceTree = "<group>"; };
		0E0EBEA329405F6800C9F071 /* BinaryTreePaths.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BinaryTreePaths.swift; sourceTree = "<group>"; };
		0E1159C5290E833E005F573C /* ContainsNearbyDuplicate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContainsNearbyDuplicate.swift; sourceTree = "<group>"; };
		0E1159C9290FAAC3005F573C /* BinarySearchTree.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = BinarySearchTree.swift; sourceTree = "<group>"; };
		0E1159CC290FAB1D005F573C /* IsValidBST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsValidBST.swift; sourceTree = "<group>"; };
		0E1159CF290FAE0E005F573C /* InorderTraversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = InorderTraversal.swift; sourceTree = "<group>"; };
		0E1159D1291181C0005F573C /* PreorderTraversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PreorderTraversal.swift; sourceTree = "<group>"; };
		0E1159D52912A413005F573C /* PostOrderTraversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PostOrderTraversal.swift; sourceTree = "<group>"; };
		0E137281293863D0004445B1 /* IsSameTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsSameTree.swift; sourceTree = "<group>"; };
		0E1372882939DA1A004445B1 /* ZigzagLevelOrder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZigzagLevelOrder.swift; sourceTree = "<group>"; };
		0E18A5852B75913D002A7311 /* MergeIntervals.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeIntervals.swift; sourceTree = "<group>"; };
		0E18A5892B765024002A7311 /* LargestDivisibleSubset.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LargestDivisibleSubset.swift; sourceTree = "<group>"; };
		0E18A58B2B778DED002A7311 /* PalindromicSubstrings.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PalindromicSubstrings.swift; sourceTree = "<group>"; };
		0E18A58E2B77F736002A7311 /* BasicCalculatorII.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BasicCalculatorII.swift; sourceTree = "<group>"; };
		0E18A5902B794BFA002A7311 /* CherryPickupII.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CherryPickupII.swift; sourceTree = "<group>"; };
		0E2543292B72C8410017DBF4 /* HeapSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HeapSort.swift; sourceTree = "<group>"; };
		0E25432C2B72DD1E0017DBF4 /* MergeSortedArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeSortedArray.swift; sourceTree = "<group>"; };
		0E25432E2B72FF8E0017DBF4 /* SortArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortArray.swift; sourceTree = "<group>"; };
		0E2543302B730ADD0017DBF4 /* SortCharactersByFrequency.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SortCharactersByFrequency.swift; sourceTree = "<group>"; };
		0E2543322B7318190017DBF4 /* MergeSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeSort.swift; sourceTree = "<group>"; };
		0E2543342B73B8850017DBF4 /* QuickSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = QuickSort.swift; sourceTree = "<group>"; };
		0E25433A2B74E9130017DBF4 /* PerfectSquares.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PerfectSquares.swift; sourceTree = "<group>"; };
		0E2A551828D8C9DA00A5ACE1 /* MyQueue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MyQueue.swift; sourceTree = "<group>"; };
		0E2A551B28D8CE9000A5ACE1 /* MyStack.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MyStack.swift; sourceTree = "<group>"; };
		0E2A551D28D8CF4700A5ACE1 /* Queue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Queue.swift; sourceTree = "<group>"; };
		0E2A551F28D8D55500A5ACE1 /* MinTimeToType.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinTimeToType.swift; sourceTree = "<group>"; };
		0E2A552128DA0AB900A5ACE1 /* CountMatches.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CountMatches.swift; sourceTree = "<group>"; };
		0E2B99DB28F98EE70080561E /* KWeakestRows.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KWeakestRows.swift; sourceTree = "<group>"; };
		0E2B99DD28F99DF40080561E /* CheckIfExist.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CheckIfExist.swift; sourceTree = "<group>"; };
		0E2B99DF28F9A0AF0080561E /* JudgeSquareSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JudgeSquareSum.swift; sourceTree = "<group>"; };
		0E2B99E128FC6F0C0080561E /* MaxDistance.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxDistance.swift; sourceTree = "<group>"; };
		0E3122AA2C3D5D3B001B3464 /* AverageWaitingTime.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AverageWaitingTime.swift; sourceTree = "<group>"; };
		0E3122AC2C3E6FEF001B3464 /* CrawlerLogFolder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CrawlerLogFolder.swift; sourceTree = "<group>"; };
		0E35825D2B5DEA7500EE03BB /* SetMismatch.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SetMismatch.swift; sourceTree = "<group>"; };
		0E3582682B5F2E2B00EE03BB /* GenerateParentheses.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GenerateParentheses.swift; sourceTree = "<group>"; };
		0E35826A2B6044A000EE03BB /* MaxLength.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxLength.swift; sourceTree = "<group>"; };
		0E35826C2B60C38000EE03BB /* PseudoPalindromicPaths.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PseudoPalindromicPaths.swift; sourceTree = "<group>"; };
		0E35826E2B630DC200EE03BB /* LongestCommonSubsequence.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LongestCommonSubsequence.swift; sourceTree = "<group>"; };
		0E3582702B63F6E400EE03BB /* OutBoundaryPaths.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OutBoundaryPaths.swift; sourceTree = "<group>"; };
		0E3582732B659BC200EE03BB /* KInversePairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KInversePairs.swift; sourceTree = "<group>"; };
		0E3582762B66743900EE03BB /* DefuseBomb.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DefuseBomb.swift; sourceTree = "<group>"; };
		0E3CDA4E2913F8DC0094D139 /* IsStrictlyPalindromic.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsStrictlyPalindromic.swift; sourceTree = "<group>"; };
		0E465C90293B4E84006CCDDF /* IsSymmetricTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsSymmetricTree.swift; sourceTree = "<group>"; };
		0E4F83C02C2C54D800AA22BD /* BalanceBST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BalanceBST.swift; sourceTree = "<group>"; };
		0E5B5ADA2BF5E2EB00BBAC2D /* CombinationSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CombinationSum.swift; sourceTree = "<group>"; };
		0E5B5ADC2BFE6EB000BBAC2D /* PalindromePartitioning.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PalindromePartitioning.swift; sourceTree = "<group>"; };
		0E5B5ADE2C00A0FF00BBAC2D /* Subsets.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Subsets.swift; sourceTree = "<group>"; };
		0E5FFA9F28E6094200EB8C00 /* SearchMatrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchMatrix.swift; sourceTree = "<group>"; };
		0E613B9328E723900050D79B /* MaxNumberOfBalloons.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxNumberOfBalloons.swift; sourceTree = "<group>"; };
		0E613B9528E8A14A0050D79B /* DiagonalSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DiagonalSum.swift; sourceTree = "<group>"; };
		0E613B9728E98F1C0050D79B /* SetZeroes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SetZeroes.swift; sourceTree = "<group>"; };
		0E613B9928E9F33B0050D79B /* LastStoneWeight.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LastStoneWeight.swift; sourceTree = "<group>"; };
		0E6580FA2B6AF98700BE3C59 /* MinDepth.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinDepth.swift; sourceTree = "<group>"; };
		0E6580FD2B6B849E00BE3C59 /* BinaryTreeMaximumPathSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BinaryTreeMaximumPathSum.swift; sourceTree = "<group>"; };
		0E6580FF2B6BF4D300BE3C59 /* DivideArrayIntoArraysWithMaxDifference.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DivideArrayIntoArraysWithMaxDifference.swift; sourceTree = "<group>"; };
		0E6581012B6D71CE00BE3C59 /* SequentialDigits.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SequentialDigits.swift; sourceTree = "<group>"; };
		0E65811D2B6EEFE400BE3C59 /* MaxSumAfterPartitioning.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxSumAfterPartitioning.swift; sourceTree = "<group>"; };
		0E6581202B70239300BE3C59 /* MinWindow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinWindow.swift; sourceTree = "<group>"; };
		0E6581222B7034ED00BE3C59 /* MinHeap.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinHeap.swift; sourceTree = "<group>"; };
		0E6581242B70521E00BE3C59 /* FindKthLargest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindKthLargest.swift; sourceTree = "<group>"; };
		0E6581282B70558000BE3C59 /* MaxHeap.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxHeap.swift; sourceTree = "<group>"; };
		0E65812B2B7058D200BE3C59 /* ThirdMax.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThirdMax.swift; sourceTree = "<group>"; };
		0E65812D2B705B8700BE3C59 /* NthUglyNumber.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NthUglyNumber.swift; sourceTree = "<group>"; };
		0E6581302B70654700BE3C59 /* FirstUniqChar.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FirstUniqChar.swift; sourceTree = "<group>"; };
		0E6581332B7066C400BE3C59 /* IsUgly.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsUgly.swift; sourceTree = "<group>"; };
		0E664EC92C0572CE005C397A /* EqualSubstring.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EqualSubstring.swift; sourceTree = "<group>"; };
		0E68C1742B51ACAB00AF6B1D /* DeleteNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeleteNode.swift; sourceTree = "<group>"; };
		0E68C1762B51B77B00AF6B1D /* OddEvenLinkedList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OddEvenLinkedList.swift; sourceTree = "<group>"; };
		0E68C1782B53113300AF6B1D /* FindSubstring.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindSubstring.swift; sourceTree = "<group>"; };
		0E68F94628DD4E0500C4BCDF /* AddDigits.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AddDigits.swift; sourceTree = "<group>"; };
		0E68F94A28DDEA9500C4BCDF /* ConvertToBase7.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConvertToBase7.swift; sourceTree = "<group>"; };
		0E68F94C28DF633700C4BCDF /* CanMakeArithmeticProgression.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CanMakeArithmeticProgression.swift; sourceTree = "<group>"; };
		0E68F94E28E0B80000C4BCDF /* IsPowerOfTwo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsPowerOfTwo.swift; sourceTree = "<group>"; };
		0E6C1AB328E2042D009FC596 /* NumOfStrings.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NumOfStrings.swift; sourceTree = "<group>"; };
		0E71D62228F2A9B0004F5F84 /* ArrangeCoins.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArrangeCoins.swift; sourceTree = "<group>"; };
		0E71D66A28F50CD2004F5F84 /* FindKthPositive.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindKthPositive.swift; sourceTree = "<group>"; };
		0E71D66C28F5CBCD004F5F84 /* SpecialArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SpecialArray.swift; sourceTree = "<group>"; };
		0E74E3422C302768007CECD7 /* GetAncestors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GetAncestors.swift; sourceTree = "<group>"; };
		0E74E3462C326254007CECD7 /* ThreeConsecutiveOdds.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThreeConsecutiveOdds.swift; sourceTree = "<group>"; };
		0E75B1FE28F01DF500627484 /* NextGreatestLetter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NextGreatestLetter.swift; sourceTree = "<group>"; };
		0E7938F028E35B24008B5966 /* HammingWeight.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HammingWeight.swift; sourceTree = "<group>"; };
		0E79D2F628E4B73000B85F22 /* PivotArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PivotArray.swift; sourceTree = "<group>"; };
		0E79D2F828E4BA0A00B85F22 /* MaxWidthOfVerticalArea.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxWidthOfVerticalArea.swift; sourceTree = "<group>"; };
		0E7E09D42B799D4700ACC593 /* TopKFrequentElements.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TopKFrequentElements.swift; sourceTree = "<group>"; };
		0E7E09D62B79AB3F00ACC593 /* RadixSort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RadixSort.swift; sourceTree = "<group>"; };
		0E7E09D82B7A26C600ACC593 /* MajorityElement.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MajorityElement.swift; sourceTree = "<group>"; };
		0E7E09DC2B7AF36300ACC593 /* FindFirstPalindromicString.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindFirstPalindromicString.swift; sourceTree = "<group>"; };
		0E7E09E32B7C40F500ACC593 /* RearrangeArrayElements.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RearrangeArrayElements.swift; sourceTree = "<group>"; };
		0E7E09E52B7CDE0400ACC593 /* LRUCache.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LRUCache.swift; sourceTree = "<group>"; };
		0E7E0A092B7D912C00ACC593 /* PolygonWithLargestPerimeter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PolygonWithLargestPerimeter.swift; sourceTree = "<group>"; };
		0E7E0A0B2B7F8BAF00ACC593 /* LeastNumberUniqueIntegers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LeastNumberUniqueIntegers.swift; sourceTree = "<group>"; };
		0E850DF028BF1A6A005C6923 /* IntersectionLinkedLists.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntersectionLinkedLists.swift; sourceTree = "<group>"; };
		0E94DD812B4D693B00C7C118 /* UniquePaths.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UniquePaths.swift; sourceTree = "<group>"; };
		0E95CCFE2B551DC000C5AB8A /* SearchRotatedArray2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchRotatedArray2.swift; sourceTree = "<group>"; };
		0E95CD012B55511000C5AB8A /* FindWinners.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindWinners.swift; sourceTree = "<group>"; };
		0E95CD042B568BCF00C5AB8A /* ReverseBits.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReverseBits.swift; sourceTree = "<group>"; };
		0E95CD062B56907400C5AB8A /* XorOperation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XorOperation.swift; sourceTree = "<group>"; };
		0E95CD082B569F0400C5AB8A /* RangeBitwiseAnd.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RangeBitwiseAnd.swift; sourceTree = "<group>"; };
		0E95CD0A2B56A0C800C5AB8A /* RandomizedSet.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RandomizedSet.swift; sourceTree = "<group>"; };
		0E95CD0D2B56E0E100C5AB8A /* MinBitFlips.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinBitFlips.swift; sourceTree = "<group>"; };
		0E95CD0F2B56E3BD00C5AB8A /* SingleNumber.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SingleNumber.swift; sourceTree = "<group>"; };
		0E95CD242B57DAAA00C5AB8A /* UniqueOccurrences.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = UniqueOccurrences.swift; sourceTree = "<group>"; };
		0E95CD272B57FC8200C5AB8A /* MaxDepthTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxDepthTree.swift; sourceTree = "<group>"; };
		0E95CD2A2B59CEAA00C5AB8A /* ClimbStairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClimbStairs.swift; sourceTree = "<group>"; };
		0E95CD2D2B5AE44900C5AB8A /* MinFallingPathSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinFallingPathSum.swift; sourceTree = "<group>"; };
		0E95CD2F2B5B640500C5AB8A /* SumSubarrayMins.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SumSubarrayMins.swift; sourceTree = "<group>"; };
		0E95CD312B5C25A000C5AB8A /* EvaluateTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EvaluateTree.swift; sourceTree = "<group>"; };
		0E95CD332B5C2D7000C5AB8A /* MergeTrees.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeTrees.swift; sourceTree = "<group>"; };
		0E95CD352B5C9D2600C5AB8A /* RobHouse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RobHouse.swift; sourceTree = "<group>"; };
		0E95CD372B5D574600C5AB8A /* NumTrees.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NumTrees.swift; sourceTree = "<group>"; };
		0E9C37352915226400DD5D39 /* DeepestLeavesSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeepestLeavesSum.swift; sourceTree = "<group>"; };
		0E9C373729152DD900DD5D39 /* AverageOfSubtree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AverageOfSubtree.swift; sourceTree = "<group>"; };
		0E9C373929179A8300DD5D39 /* RangeSumBST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RangeSumBST.swift; sourceTree = "<group>"; };
		0E9C373B291962F300DD5D39 /* SearchBST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchBST.swift; sourceTree = "<group>"; };
		0E9C373D291AE34600DD5D39 /* IsToeplitzMatrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsToeplitzMatrix.swift; sourceTree = "<group>"; };
		0E9C373F291BD4CE00DD5D39 /* SumRootToLeaf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SumRootToLeaf.swift; sourceTree = "<group>"; };
		0E9C3741291BDD5800DD5D39 /* CheckTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CheckTree.swift; sourceTree = "<group>"; };
		0E9C3743291E062100DD5D39 /* SumEvenGrandparent.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SumEvenGrandparent.swift; sourceTree = "<group>"; };
		0E9C37452920161500DD5D39 /* IncreasingBST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IncreasingBST.swift; sourceTree = "<group>"; };
		0E9C37472921618600DD5D39 /* BstToGst.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BstToGst.swift; sourceTree = "<group>"; };
		0EA44E222B8AB9B1000316C9 /* FindPathExists.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindPathExists.swift; sourceTree = "<group>"; };
		0EA44E242B8BC0B9000316C9 /* CheapestFlightsWithinKStops.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CheapestFlightsWithinKStops.swift; sourceTree = "<group>"; };
		0EA44E262B8BFBFF000316C9 /* FindAllPeopleWithSecret.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindAllPeopleWithSecret.swift; sourceTree = "<group>"; };
		0EA44E282B8CE7A9000316C9 /* GreatestCommonDivisorTraversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GreatestCommonDivisorTraversal.swift; sourceTree = "<group>"; };
		0EA44E2A2B8CFFDF000316C9 /* RemoveDuplicatesfromSortedArrayII.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveDuplicatesfromSortedArrayII.swift; sourceTree = "<group>"; };
		0EA44E2C2B8D47B6000316C9 /* FactorialTrailingZeroes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FactorialTrailingZeroes.swift; sourceTree = "<group>"; };
		0EA44E2E2B8DE2F3000316C9 /* DiameterBinaryTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DiameterBinaryTree.swift; sourceTree = "<group>"; };
		0EA44E302B8DEAA5000316C9 /* Number of Islands.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Number of Islands.swift"; sourceTree = "<group>"; };
		0EA44E322B8FC4BD000316C9 /* FindBottomLeftTreeValue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindBottomLeftTreeValue.swift; sourceTree = "<group>"; };
		0EA44E342B8FE6F9000316C9 /* SurroundedRegions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SurroundedRegions.swift; sourceTree = "<group>"; };
		0EA44E362B8FF945000316C9 /* CloneGraph.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CloneGraph.swift; sourceTree = "<group>"; };
		0EA44E382B9001E5000316C9 /* EvenOddTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EvenOddTree.swift; sourceTree = "<group>"; };
		0EA489DC2C358C8E00B588EF /*  MinimumDifferenceBetweenLargestSmallest3.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = " MinimumDifferenceBetweenLargestSmallest3.swift"; sourceTree = "<group>"; };
		0EA489DE2C368B8800B588EF /* MergeNodes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MergeNodes.swift; sourceTree = "<group>"; };
		0EA489E02C39016E00B588EF /* PassThePillow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PassThePillow.swift; sourceTree = "<group>"; };
		0EA917802C33DBDB009A1D0D /* IntersectionTwoArrays.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntersectionTwoArrays.swift; sourceTree = "<group>"; };
		0EA9D7D928CF742E0051F73E /* RemoveElements.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RemoveElements.swift; sourceTree = "<group>"; };
		0EABD2F928CCD3C200415039 /* LongestPalindrome.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LongestPalindrome.swift; sourceTree = "<group>"; };
		0EABD2FB28CCE5D400415039 /* Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Extensions.swift; sourceTree = "<group>"; };
		0EABD2FF28CDBE7E00415039 /* Sqrt.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Sqrt.swift; sourceTree = "<group>"; };
		0EB326CF28BC836300DD597C /* DeleteMiddleNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeleteMiddleNode.swift; sourceTree = "<group>"; };
		0EB326D328BDA4C600DD597C /* PartitionList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PartitionList.swift; sourceTree = "<group>"; };
		0EB326D528BDADFF00DD597C /* AddTwoNumbers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AddTwoNumbers.swift; sourceTree = "<group>"; };
		0EB326D928BDCA9000DD597C /* PalindromeLinkedList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PalindromeLinkedList.swift; sourceTree = "<group>"; };
		0EB8981728B46DF000D269E0 /* ListNode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListNode.swift; sourceTree = "<group>"; };
		0EB8981928B46FA900D269E0 /* DeleteDuplicatesLinkedList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeleteDuplicatesLinkedList.swift; sourceTree = "<group>"; };
		0EB8981B28B4750300D269E0 /* DeleteDuplicatesLinkedList2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DeleteDuplicatesLinkedList2.swift; sourceTree = "<group>"; };
		0EB8CBC2292FE115003AF795 /* MinSetSize.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinSetSize.swift; sourceTree = "<group>"; };
		0EB8CBC529321A85003AF795 /* FindTheWinner.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindTheWinner.swift; sourceTree = "<group>"; };
		0EB8CBC729338F54003AF795 /* Graph.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Graph.swift; sourceTree = "<group>"; };
		0EB8CBCA29339B59003AF795 /* FindCenter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindCenter.swift; sourceTree = "<group>"; };
		0EB8CBCC2935D0EB003AF795 /* LevelOrder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LevelOrder.swift; sourceTree = "<group>"; };
		0EBA12FF2C07AC69001CABA1 /* NumSteps.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NumSteps.swift; sourceTree = "<group>"; };
		0EBA131E2C0C9EF9001CABA1 /* ScoreOfString.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ScoreOfString.swift; sourceTree = "<group>"; };
		0EBA13202C0CA0D4001CABA1 /* SingleNumberIII.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SingleNumberIII.swift; sourceTree = "<group>"; };
		0EBA13472C0ED0F0001CABA1 /* LongestPalindromeEasy.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LongestPalindromeEasy.swift; sourceTree = "<group>"; };
		0EBA13492C11E18E001CABA1 /* CommonChars.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CommonChars.swift; sourceTree = "<group>"; };
		0EBA134D2C136B9D001CABA1 /* ReplaceWords.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReplaceWords.swift; sourceTree = "<group>"; };
		0EBA13502C1488F4001CABA1 /* CheckSubarraySum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CheckSubarraySum.swift; sourceTree = "<group>"; };
		0EBB250F29425A37005BEABE /* PathSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PathSum.swift; sourceTree = "<group>"; };
		0EBB251229451253005BEABE /* Interpret.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Interpret.swift; sourceTree = "<group>"; };
		0EBBB7B528D0E1BB00E8FD5E /* DivideArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DivideArray.swift; sourceTree = "<group>"; };
		0EBBB7B728D0E40100E8FD5E /* FindFinalValue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindFinalValue.swift; sourceTree = "<group>"; };
		0EBBB7B928D0E69400E8FD5E /* DominantIndex.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DominantIndex.swift; sourceTree = "<group>"; };
		0EBBB7BB28D161F700E8FD5E /* ReverseLinkedList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReverseLinkedList.swift; sourceTree = "<group>"; };
		0EBBB7BD28D166FF00E8FD5E /* KthDistinctString.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KthDistinctString.swift; sourceTree = "<group>"; };
		0EC89C6928DB782400ABC524 /* DecodeString.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DecodeString.swift; sourceTree = "<group>"; };
		0EC89C6B28DB7D8D00ABC524 /* SummaryRanges.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SummaryRanges.swift; sourceTree = "<group>"; };
		0EC97E272B80FBBD009E7C84 /* MaximumNumberOperationsWithSameScore.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaximumNumberOperationsWithSameScore.swift; sourceTree = "<group>"; };
		0EC97E292B80FDAD009E7C84 /* ApplyOperationstoMakeStringEmpty.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ApplyOperationstoMakeStringEmpty.swift; sourceTree = "<group>"; };
		0EC97E2B2B81040E009E7C84 /* Maximum Number of Operations With the Same Score II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Maximum Number of Operations With the Same Score II.swift"; sourceTree = "<group>"; };
		0EC97E2E2B8144B5009E7C84 /* FurthestBuildingYouCanReach.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FurthestBuildingYouCanReach.swift; sourceTree = "<group>"; };
		0EC97E302B82C008009E7C84 /* MeetingRoomsIII.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MeetingRoomsIII.swift; sourceTree = "<group>"; };
		0EC97E322B852AAC009E7C84 /* MissingNumber.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MissingNumber.swift; sourceTree = "<group>"; };
		0EC97E442B872B4B009E7C84 /* TownJudge.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TownJudge.swift; sourceTree = "<group>"; };
		0EC97E472B8731E5009E7C84 /* AllPathsFromSourceTarget.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AllPathsFromSourceTarget.swift; sourceTree = "<group>"; };
		0EC9C2C62B668F020062956C /* FindDuplicateNumber.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindDuplicateNumber.swift; sourceTree = "<group>"; };
		0EC9C2C82B670BD30062956C /* GenerateTrees.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GenerateTrees.swift; sourceTree = "<group>"; };
		0EC9C2CA2B67B93D0062956C /* RecoverTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RecoverTree.swift; sourceTree = "<group>"; };
		0EC9C2CC2B67D8680062956C /* ConstructBinaryTreeFromInorderPostorderTraversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConstructBinaryTreeFromInorderPostorderTraversal.swift; sourceTree = "<group>"; };
		0ECF33132C1E1FBD002553E1 /* MinIncrementForUnique.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MinIncrementForUnique.swift; sourceTree = "<group>"; };
		0ED9382B2922C3A9005D4A6C /* BuildTree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BuildTree.swift; sourceTree = "<group>"; };
		0ED9382E2922C687005D4A6C /* FindTheDifference.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindTheDifference.swift; sourceTree = "<group>"; };
		0ED9383129267C92005D4A6C /* FinalValueAfterOperations.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FinalValueAfterOperations.swift; sourceTree = "<group>"; };
		0ED9383329295BE9005D4A6C /* MaximumWealth.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaximumWealth.swift; sourceTree = "<group>"; };
		0ED93835292A1DF6005D4A6C /* InsertIntoBSTAVL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = InsertIntoBSTAVL.swift; sourceTree = "<group>"; };
		0EDABC57293E75BE00612263 /* MaxDepth.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaxDepth.swift; sourceTree = "<group>"; };
		0EEED4D028F64B0A0073235A /* CountNegatives.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CountNegatives.swift; sourceTree = "<group>"; };
		0EF1DF4C28D6B4100044FEBD /* ReorderList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReorderList.swift; sourceTree = "<group>"; };
		0EF534DA28EB3B8E0023A8DB /* CheckAlmostEquivalent.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CheckAlmostEquivalent.swift; sourceTree = "<group>"; };
		0EF534DF28EBDC780023A8DB /* SearchBinary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchBinary.swift; sourceTree = "<group>"; };
		0EF534E128EBE1CA0023A8DB /* GuessNumber.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GuessNumber.swift; sourceTree = "<group>"; };
		0EF534E328EBE49D0023A8DB /* SearchInsert.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchInsert.swift; sourceTree = "<group>"; };
		0EF534E628EBEB9F0023A8DB /* PeakIndexInMountainArray.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PeakIndexInMountainArray.swift; sourceTree = "<group>"; };
		0EF534EA28EDA2790023A8DB /* IsPerfectSquare.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IsPerfectSquare.swift; sourceTree = "<group>"; };
		0EF534EC28EDABBA0023A8DB /* FindTheDistanceValue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FindTheDistanceValue.swift; sourceTree = "<group>"; };
		0EF534EE28EDCFE60023A8DB /* FirstBadVersion.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FirstBadVersion.swift; sourceTree = "<group>"; };
		0EF534F028EDD4BE0023A8DB /* SearchRange.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SearchRange.swift; sourceTree = "<group>"; };
		0EFDA3BA28D4DC9C009C424D /* JudgeCircle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JudgeCircle.swift; sourceTree = "<group>"; };
		0EFDA3BD28D564F5009C424D /* GetMin.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GetMin.swift; sourceTree = "<group>"; };
		0EFDA3BF28D56529009C424D /* Stack.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stack.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		0E04720B288FB1B900D2F087 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		0E047205288FB1B900D2F087 = {
			isa = PBXGroup;
			children = (
				0E04721A288FB3CB00D2F087 /* LeetCode.playground */,
				0E047210288FB1B900D2F087 /* LeetCode */,
				0E04720F288FB1B900D2F087 /* Products */,
			);
			sourceTree = "<group>";
		};
		0E04720F288FB1B900D2F087 /* Products */ = {
			isa = PBXGroup;
			children = (
				0E04720E288FB1B900D2F087 /* LeetCode */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		0E047210288FB1B900D2F087 /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				0EC97E262B80FB9F009E7C84 /* Contests */,
				0E077A882B70FF8C00FDE0E9 /* Sorting */,
				0EB8981628B46DDD00D269E0 /* DS */,
				0EED057D289A9FB8006F6FC2 /* In Progress */,
				0E04721B288FB40300D2F087 /* Completed */,
				0E047211288FB1B900D2F087 /* main.swift */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
		0E04721B288FB40300D2F087 /* Completed */ = {
			isa = PBXGroup;
			children = (
				0EED057A289A9F9B006F6FC2 /* Easy */,
				0EED057B289A9FA1006F6FC2 /* Medium */,
				0EED057C289A9FA9006F6FC2 /* Hard */,
			);
			path = Completed;
			sourceTree = "<group>";
		};
		0E04C4782C4B7FA100919390 /* Hash Set */ = {
			isa = PBXGroup;
			children = (
				0E04C4762C4AF8D900919390 /* LuckyNumbers.swift */,
			);
			path = "Hash Set";
			sourceTree = "<group>";
		};
		0E077A852B70FA8500FDE0E9 /* Sorting */ = {
			isa = PBXGroup;
			children = (
				0E077A862B70FAA200FDE0E9 /* SortColors.swift */,
				0E077A932B729B1A00FDE0E9 /* MaximumGap.swift */,
				0E25432E2B72FF8E0017DBF4 /* SortArray.swift */,
				0E18A5852B75913D002A7311 /* MergeIntervals.swift */,
				0E18A5892B765024002A7311 /* LargestDivisibleSubset.swift */,
				0ECF33132C1E1FBD002553E1 /* MinIncrementForUnique.swift */,
				0EA489DC2C358C8E00B588EF /*  MinimumDifferenceBetweenLargestSmallest3.swift */,
			);
			path = Sorting;
			sourceTree = "<group>";
		};
		0E077A882B70FF8C00FDE0E9 /* Sorting */ = {
			isa = PBXGroup;
			children = (
				0E077A892B70FF9F00FDE0E9 /* BubbleSort.swift */,
				0E077A8B2B71A57900FDE0E9 /* SelectionSort.swift */,
				0E077A912B7266CA00FDE0E9 /* InsertionSort.swift */,
				0E2543292B72C8410017DBF4 /* HeapSort.swift */,
				0E2543322B7318190017DBF4 /* MergeSort.swift */,
				0E2543342B73B8850017DBF4 /* QuickSort.swift */,
				0E7E09D62B79AB3F00ACC593 /* RadixSort.swift */,
			);
			path = Sorting;
			sourceTree = "<group>";
		};
		0E1159CB290FAB04005F573C /* BinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				0E1159CC290FAB1D005F573C /* IsValidBST.swift */,
				0E9C37352915226400DD5D39 /* DeepestLeavesSum.swift */,
				0E9C373729152DD900DD5D39 /* AverageOfSubtree.swift */,
				0E9C3743291E062100DD5D39 /* SumEvenGrandparent.swift */,
				0E9C37472921618600DD5D39 /* BstToGst.swift */,
				0ED9382B2922C3A9005D4A6C /* BuildTree.swift */,
				0ED93835292A1DF6005D4A6C /* InsertIntoBSTAVL.swift */,
				0EB8CBCC2935D0EB003AF795 /* LevelOrder.swift */,
				0E1372882939DA1A004445B1 /* ZigzagLevelOrder.swift */,
				0EBB250F29425A37005BEABE /* PathSum.swift */,
				0E35826C2B60C38000EE03BB /* PseudoPalindromicPaths.swift */,
				0EC9C2C82B670BD30062956C /* GenerateTrees.swift */,
				0EC9C2CA2B67B93D0062956C /* RecoverTree.swift */,
				0EC9C2CC2B67D8680062956C /* ConstructBinaryTreeFromInorderPostorderTraversal.swift */,
				0E077A8F2B725A2F00FDE0E9 /* SumRootToLeafNumbers.swift */,
				0EA44E322B8FC4BD000316C9 /* FindBottomLeftTreeValue.swift */,
				0EA44E382B9001E5000316C9 /* EvenOddTree.swift */,
				0E4F83C02C2C54D800AA22BD /* BalanceBST.swift */,
				0E0C53182C44D59900935F55 /* CreateBinaryTree.swift */,
			);
			path = BinarySearchTree;
			sourceTree = "<group>";
		};
		0E1159CE290FADF8005F573C /* BinarySearchTree */ = {
			isa = PBXGroup;
			children = (
				0E1159CF290FAE0E005F573C /* InorderTraversal.swift */,
				0E1159D1291181C0005F573C /* PreorderTraversal.swift */,
				0E1159D52912A413005F573C /* PostOrderTraversal.swift */,
				0E9C373929179A8300DD5D39 /* RangeSumBST.swift */,
				0E9C373B291962F300DD5D39 /* SearchBST.swift */,
				0E9C373F291BD4CE00DD5D39 /* SumRootToLeaf.swift */,
				0E9C3741291BDD5800DD5D39 /* CheckTree.swift */,
				0E9C37452920161500DD5D39 /* IncreasingBST.swift */,
				0E137281293863D0004445B1 /* IsSameTree.swift */,
				0EDABC57293E75BE00612263 /* MaxDepth.swift */,
				0E0EBEA329405F6800C9F071 /* BinaryTreePaths.swift */,
				0E0EBEA1293F862B00C9F071 /* HasPathSum.swift */,
				0E95CD312B5C25A000C5AB8A /* EvaluateTree.swift */,
				0E95CD332B5C2D7000C5AB8A /* MergeTrees.swift */,
				0E6580FA2B6AF98700BE3C59 /* MinDepth.swift */,
				0EA44E2E2B8DE2F3000316C9 /* DiameterBinaryTree.swift */,
			);
			path = BinarySearchTree;
			sourceTree = "<group>";
		};
		0E18A58D2B7794A5002A7311 /* String */ = {
			isa = PBXGroup;
			children = (
				0EABD2F928CCD3C200415039 /* LongestPalindrome.swift */,
				0E18A58B2B778DED002A7311 /* PalindromicSubstrings.swift */,
				0EBA134D2C136B9D001CABA1 /* ReplaceWords.swift */,
			);
			path = String;
			sourceTree = "<group>";
		};
		0E2A551728D8C9BC00A5ACE1 /* Queue */ = {
			isa = PBXGroup;
			children = (
				0E2A551828D8C9DA00A5ACE1 /* MyQueue.swift */,
			);
			path = Queue;
			sourceTree = "<group>";
		};
		0E2A551A28D8CE7E00A5ACE1 /* Stack */ = {
			isa = PBXGroup;
			children = (
				0E2A551B28D8CE9000A5ACE1 /* MyStack.swift */,
				0E05DB1929005F88008A8450 /* CalPoints.swift */,
				0E05DB232907EB4D008A8450 /* BackspaceCompare.swift */,
				0E05DB252907EE6B008A8450 /* RemoveOuterParentheses.swift */,
				0E06B5E0290A95A800A2782B /* RemoveAdjacentDuplicates.swift */,
				0E0E4AD9290C209600138BB8 /* FinalPrices.swift */,
			);
			path = Stack;
			sourceTree = "<group>";
		};
		0E3582672B5F2E1800EE03BB /* Backtracking */ = {
			isa = PBXGroup;
			children = (
				0E35826A2B6044A000EE03BB /* MaxLength.swift */,
				0E3582682B5F2E2B00EE03BB /* GenerateParentheses.swift */,
				0E5B5ADA2BF5E2EB00BBAC2D /* CombinationSum.swift */,
				0E5B5ADC2BFE6EB000BBAC2D /* PalindromePartitioning.swift */,
				0E5B5ADE2C00A0FF00BBAC2D /* Subsets.swift */,
			);
			path = Backtracking;
			sourceTree = "<group>";
		};
		0E3582722B659BAF00EE03BB /* Dynamic Programming */ = {
			isa = PBXGroup;
			children = (
				0E3582732B659BC200EE03BB /* KInversePairs.swift */,
				0E18A5902B794BFA002A7311 /* CherryPickupII.swift */,
			);
			path = "Dynamic Programming";
			sourceTree = "<group>";
		};
		0E3582752B66742300EE03BB /* Sliding Window */ = {
			isa = PBXGroup;
			children = (
				0E3582762B66743900EE03BB /* DefuseBomb.swift */,
			);
			path = "Sliding Window";
			sourceTree = "<group>";
		};
		0E6580FC2B6B847E00BE3C59 /* Tree */ = {
			isa = PBXGroup;
			children = (
				0E6580FD2B6B849E00BE3C59 /* BinaryTreeMaximumPathSum.swift */,
			);
			path = Tree;
			sourceTree = "<group>";
		};
		0E65811F2B70237B00BE3C59 /* Sliding Window */ = {
			isa = PBXGroup;
			children = (
				0E6581202B70239300BE3C59 /* MinWindow.swift */,
			);
			path = "Sliding Window";
			sourceTree = "<group>";
		};
		0E65812A2B7058BD00BE3C59 /* Heap */ = {
			isa = PBXGroup;
			children = (
				0E65812B2B7058D200BE3C59 /* ThirdMax.swift */,
			);
			path = Heap;
			sourceTree = "<group>";
		};
		0E65812F2B705E1E00BE3C59 /* Math */ = {
			isa = PBXGroup;
			children = (
				0E65812D2B705B8700BE3C59 /* NthUglyNumber.swift */,
				0E18A58E2B77F736002A7311 /* BasicCalculatorII.swift */,
				0EA44E2C2B8D47B6000316C9 /* FactorialTrailingZeroes.swift */,
			);
			path = Math;
			sourceTree = "<group>";
		};
		0E6581322B7066B600BE3C59 /* Math */ = {
			isa = PBXGroup;
			children = (
				0E6581332B7066C400BE3C59 /* IsUgly.swift */,
				0EC97E322B852AAC009E7C84 /* MissingNumber.swift */,
				0EA489E02C39016E00B588EF /* PassThePillow.swift */,
			);
			path = Math;
			sourceTree = "<group>";
		};
		0E664ECB2C05E64B005C397A /* Sliding Window */ = {
			isa = PBXGroup;
			children = (
				0E664EC92C0572CE005C397A /* EqualSubstring.swift */,
			);
			path = "Sliding Window";
			sourceTree = "<group>";
		};
		0E7E09E22B7C40E000ACC593 /* Array */ = {
			isa = PBXGroup;
			children = (
				0E7E09E32B7C40F500ACC593 /* RearrangeArrayElements.swift */,
				0E7E0A092B7D912C00ACC593 /* PolygonWithLargestPerimeter.swift */,
				0EC97E2E2B8144B5009E7C84 /* FurthestBuildingYouCanReach.swift */,
				0EA44E2A2B8CFFDF000316C9 /* RemoveDuplicatesfromSortedArrayII.swift */,
				0E3122AA2C3D5D3B001B3464 /* AverageWaitingTime.swift */,
			);
			path = Array;
			sourceTree = "<group>";
		};
		0E94DD802B4D691300C7C118 /* DP */ = {
			isa = PBXGroup;
			children = (
				0E94DD812B4D693B00C7C118 /* UniquePaths.swift */,
				0E25433A2B74E9130017DBF4 /* PerfectSquares.swift */,
			);
			path = DP;
			sourceTree = "<group>";
		};
		0E95CD002B55510200C5AB8A /* Hash Map */ = {
			isa = PBXGroup;
			children = (
				0E95CD012B55511000C5AB8A /* FindWinners.swift */,
				0E95CD0A2B56A0C800C5AB8A /* RandomizedSet.swift */,
				0E95CD0F2B56E3BD00C5AB8A /* SingleNumber.swift */,
				0E077A8D2B72238C00FDE0E9 /* GroupAnagrams.swift */,
				0E2543302B730ADD0017DBF4 /* SortCharactersByFrequency.swift */,
				0E7E09D42B799D4700ACC593 /* TopKFrequentElements.swift */,
				0E7E0A0B2B7F8BAF00ACC593 /* LeastNumberUniqueIntegers.swift */,
				0EBA13502C1488F4001CABA1 /* CheckSubarraySum.swift */,
			);
			path = "Hash Map";
			sourceTree = "<group>";
		};
		0E95CD032B568BB300C5AB8A /* BitManipulation */ = {
			isa = PBXGroup;
			children = (
				0E95CD042B568BCF00C5AB8A /* ReverseBits.swift */,
				0E95CD062B56907400C5AB8A /* XorOperation.swift */,
				0E95CD0D2B56E0E100C5AB8A /* MinBitFlips.swift */,
			);
			path = BitManipulation;
			sourceTree = "<group>";
		};
		0E95CD0C2B56E0B600C5AB8A /* BitManipulation */ = {
			isa = PBXGroup;
			children = (
				0E95CD082B569F0400C5AB8A /* RangeBitwiseAnd.swift */,
				0EBA12FF2C07AC69001CABA1 /* NumSteps.swift */,
				0EBA13202C0CA0D4001CABA1 /* SingleNumberIII.swift */,
			);
			path = BitManipulation;
			sourceTree = "<group>";
		};
		0E95CD262B57FC7200C5AB8A /* Tree */ = {
			isa = PBXGroup;
			children = (
				0E95CD272B57FC8200C5AB8A /* MaxDepthTree.swift */,
			);
			path = Tree;
			sourceTree = "<group>";
		};
		0E95CD292B59CE9500C5AB8A /* Dynamic Programming */ = {
			isa = PBXGroup;
			children = (
				0E95CD2A2B59CEAA00C5AB8A /* ClimbStairs.swift */,
			);
			path = "Dynamic Programming";
			sourceTree = "<group>";
		};
		0E95CD2C2B5AE43800C5AB8A /* Dynamic Programming */ = {
			isa = PBXGroup;
			children = (
				0E95CD2D2B5AE44900C5AB8A /* MinFallingPathSum.swift */,
				0E95CD2F2B5B640500C5AB8A /* SumSubarrayMins.swift */,
				0E95CD352B5C9D2600C5AB8A /* RobHouse.swift */,
				0E95CD372B5D574600C5AB8A /* NumTrees.swift */,
				0E35826E2B630DC200EE03BB /* LongestCommonSubsequence.swift */,
				0E3582702B63F6E400EE03BB /* OutBoundaryPaths.swift */,
				0E65811D2B6EEFE400BE3C59 /* MaxSumAfterPartitioning.swift */,
			);
			path = "Dynamic Programming";
			sourceTree = "<group>";
		};
		0EA917822C33DDC5009A1D0D /* Two Pointer */ = {
			isa = PBXGroup;
			children = (
				0EA917802C33DBDB009A1D0D /* IntersectionTwoArrays.swift */,
			);
			path = "Two Pointer";
			sourceTree = "<group>";
		};
		0EB326CD28BC832100DD597C /* LinkedList */ = {
			isa = PBXGroup;
			children = (
				0EB8981928B46FA900D269E0 /* DeleteDuplicatesLinkedList.swift */,
				0E0697F128C9B957008DF1BC /* MergeTwoSortedLists.swift */,
				0EA9D7D928CF742E0051F73E /* RemoveElements.swift */,
				0EBBB7BB28D161F700E8FD5E /* ReverseLinkedList.swift */,
			);
			path = LinkedList;
			sourceTree = "<group>";
		};
		0EB326CE28BC833200DD597C /* LinkedList */ = {
			isa = PBXGroup;
			children = (
				0EB8981B28B4750300D269E0 /* DeleteDuplicatesLinkedList2.swift */,
				0EB326CF28BC836300DD597C /* DeleteMiddleNode.swift */,
				0EB326D328BDA4C600DD597C /* PartitionList.swift */,
				0EB326D528BDADFF00DD597C /* AddTwoNumbers.swift */,
				0EB326D928BDCA9000DD597C /* PalindromeLinkedList.swift */,
				0E850DF028BF1A6A005C6923 /* IntersectionLinkedLists.swift */,
				0E0697F328CAEEBB008DF1BC /* SwapPairs.swift */,
				0EF1DF4C28D6B4100044FEBD /* ReorderList.swift */,
				0E68C1742B51ACAB00AF6B1D /* DeleteNode.swift */,
				0E68C1762B51B77B00AF6B1D /* OddEvenLinkedList.swift */,
				0E7E09E52B7CDE0400ACC593 /* LRUCache.swift */,
				0EA489DE2C368B8800B588EF /* MergeNodes.swift */,
			);
			path = LinkedList;
			sourceTree = "<group>";
		};
		0EB8981628B46DDD00D269E0 /* DS */ = {
			isa = PBXGroup;
			children = (
				0EB8981728B46DF000D269E0 /* ListNode.swift */,
				0EABD2FB28CCE5D400415039 /* Extensions.swift */,
				0EFDA3BF28D56529009C424D /* Stack.swift */,
				0E2A551D28D8CF4700A5ACE1 /* Queue.swift */,
				0E1159C9290FAAC3005F573C /* BinarySearchTree.swift */,
				0E6581222B7034ED00BE3C59 /* MinHeap.swift */,
				0E6581282B70558000BE3C59 /* MaxHeap.swift */,
				0EB8CBC729338F54003AF795 /* Graph.swift */,
			);
			path = DS;
			sourceTree = "<group>";
		};
		0EB8CBC429321A6C003AF795 /* Recursion */ = {
			isa = PBXGroup;
			children = (
				0EB8CBC529321A85003AF795 /* FindTheWinner.swift */,
			);
			path = Recursion;
			sourceTree = "<group>";
		};
		0EB8CBC929339B44003AF795 /* Graph */ = {
			isa = PBXGroup;
			children = (
				0EB8CBCA29339B59003AF795 /* FindCenter.swift */,
				0EA44E222B8AB9B1000316C9 /* FindPathExists.swift */,
			);
			path = Graph;
			sourceTree = "<group>";
		};
		0EBB251129451240005BEABE /* String */ = {
			isa = PBXGroup;
			children = (
				0EBB251229451253005BEABE /* Interpret.swift */,
				0E7E09DC2B7AF36300ACC593 /* FindFirstPalindromicString.swift */,
				0EBA131E2C0C9EF9001CABA1 /* ScoreOfString.swift */,
			);
			path = String;
			sourceTree = "<group>";
		};
		0EC97E262B80FB9F009E7C84 /* Contests */ = {
			isa = PBXGroup;
			children = (
				0EC97E2D2B811238009E7C84 /* Biweekly 124 */,
			);
			path = Contests;
			sourceTree = "<group>";
		};
		0EC97E2D2B811238009E7C84 /* Biweekly 124 */ = {
			isa = PBXGroup;
			children = (
				0EC97E272B80FBBD009E7C84 /* MaximumNumberOperationsWithSameScore.swift */,
				0EC97E292B80FDAD009E7C84 /* ApplyOperationstoMakeStringEmpty.swift */,
				0EC97E2B2B81040E009E7C84 /* Maximum Number of Operations With the Same Score II.swift */,
			);
			path = "Biweekly 124";
			sourceTree = "<group>";
		};
		0EC97E462B8731C4009E7C84 /* Graph */ = {
			isa = PBXGroup;
			children = (
				0EC97E472B8731E5009E7C84 /* AllPathsFromSourceTarget.swift */,
				0EA44E242B8BC0B9000316C9 /* CheapestFlightsWithinKStops.swift */,
				0EA44E302B8DEAA5000316C9 /* Number of Islands.swift */,
				0EA44E342B8FE6F9000316C9 /* SurroundedRegions.swift */,
				0EA44E362B8FF945000316C9 /* CloneGraph.swift */,
				0E74E3422C302768007CECD7 /* GetAncestors.swift */,
			);
			path = Graph;
			sourceTree = "<group>";
		};
		0EC9C2C52B668EEE0062956C /* Other Algorithms */ = {
			isa = PBXGroup;
			children = (
				0EC9C2C62B668F020062956C /* FindDuplicateNumber.swift */,
			);
			path = "Other Algorithms";
			sourceTree = "<group>";
		};
		0ED9382D2922C66A005D4A6C /* HashMap */ = {
			isa = PBXGroup;
			children = (
				0ED9382E2922C687005D4A6C /* FindTheDifference.swift */,
				0E95CD242B57DAAA00C5AB8A /* UniqueOccurrences.swift */,
				0E6581302B70654700BE3C59 /* FirstUniqChar.swift */,
				0E7E09D82B7A26C600ACC593 /* MajorityElement.swift */,
				0EBA13472C0ED0F0001CABA1 /* LongestPalindromeEasy.swift */,
				0EBA13492C11E18E001CABA1 /* CommonChars.swift */,
			);
			path = HashMap;
			sourceTree = "<group>";
		};
		0ED9383029267C80005D4A6C /* Array */ = {
			isa = PBXGroup;
			children = (
				0ED9383129267C92005D4A6C /* FinalValueAfterOperations.swift */,
				0ED9383329295BE9005D4A6C /* MaximumWealth.swift */,
				0E35825D2B5DEA7500EE03BB /* SetMismatch.swift */,
				0E25432C2B72DD1E0017DBF4 /* MergeSortedArray.swift */,
				0EC97E442B872B4B009E7C84 /* TownJudge.swift */,
				0E74E3462C326254007CECD7 /* ThreeConsecutiveOdds.swift */,
				0E3122AC2C3E6FEF001B3464 /* CrawlerLogFolder.swift */,
			);
			path = Array;
			sourceTree = "<group>";
		};
		0ED93837292D07C4005D4A6C /* Heap */ = {
			isa = PBXGroup;
			children = (
				0E6581242B70521E00BE3C59 /* FindKthLargest.swift */,
			);
			path = Heap;
			sourceTree = "<group>";
		};
		0EED057A289A9F9B006F6FC2 /* Easy */ = {
			isa = PBXGroup;
			children = (
				0E04C4782C4B7FA100919390 /* Hash Set */,
				0E65812A2B7058BD00BE3C59 /* Heap */,
				0E3582752B66742300EE03BB /* Sliding Window */,
				0E95CD292B59CE9500C5AB8A /* Dynamic Programming */,
				0E95CD262B57FC7200C5AB8A /* Tree */,
				0EBB251129451240005BEABE /* String */,
				0EB8CBC929339B44003AF795 /* Graph */,
				0ED9383029267C80005D4A6C /* Array */,
				0E1159CE290FADF8005F573C /* BinarySearchTree */,
				0E2A551A28D8CE7E00A5ACE1 /* Stack */,
				0E2A551728D8C9BC00A5ACE1 /* Queue */,
				0EB326CD28BC832100DD597C /* LinkedList */,
				0EF534DE28EBDC380023A8DB /* BinarySearch */,
				0ED9382D2922C66A005D4A6C /* HashMap */,
				0E95CD032B568BB300C5AB8A /* BitManipulation */,
				0E6581322B7066B600BE3C59 /* Math */,
				0EA917822C33DDC5009A1D0D /* Two Pointer */,
				0E0697EF28C9B802008DF1BC /* Has3Divisors.swift */,
				0EBBB7B528D0E1BB00E8FD5E /* DivideArray.swift */,
				0EBBB7B728D0E40100E8FD5E /* FindFinalValue.swift */,
				0EBBB7B928D0E69400E8FD5E /* DominantIndex.swift */,
				0EBBB7BD28D166FF00E8FD5E /* KthDistinctString.swift */,
				0EFDA3BA28D4DC9C009C424D /* JudgeCircle.swift */,
				0E2A551F28D8D55500A5ACE1 /* MinTimeToType.swift */,
				0E2A552128DA0AB900A5ACE1 /* CountMatches.swift */,
				0EC89C6B28DB7D8D00ABC524 /* SummaryRanges.swift */,
				0E68F94628DD4E0500C4BCDF /* AddDigits.swift */,
				0E68F94A28DDEA9500C4BCDF /* ConvertToBase7.swift */,
				0E68F94C28DF633700C4BCDF /* CanMakeArithmeticProgression.swift */,
				0E68F94E28E0B80000C4BCDF /* IsPowerOfTwo.swift */,
				0E6C1AB328E2042D009FC596 /* NumOfStrings.swift */,
				0E7938F028E35B24008B5966 /* HammingWeight.swift */,
				0E613B9328E723900050D79B /* MaxNumberOfBalloons.swift */,
				0E613B9528E8A14A0050D79B /* DiagonalSum.swift */,
				0E613B9928E9F33B0050D79B /* LastStoneWeight.swift */,
				0EF534DA28EB3B8E0023A8DB /* CheckAlmostEquivalent.swift */,
				0E1159C5290E833E005F573C /* ContainsNearbyDuplicate.swift */,
				0E9C373D291AE34600DD5D39 /* IsToeplitzMatrix.swift */,
				0E465C90293B4E84006CCDDF /* IsSymmetricTree.swift */,
			);
			path = Easy;
			sourceTree = "<group>";
		};
		0EED057B289A9FA1006F6FC2 /* Medium */ = {
			isa = PBXGroup;
			children = (
				0E664ECB2C05E64B005C397A /* Sliding Window */,
				0E3582672B5F2E1800EE03BB /* Backtracking */,
				0E95CD2C2B5AE43800C5AB8A /* Dynamic Programming */,
				0E95CD0C2B56E0B600C5AB8A /* BitManipulation */,
				0E95CD002B55510200C5AB8A /* Hash Map */,
				0EB8CBC429321A6C003AF795 /* Recursion */,
				0ED93837292D07C4005D4A6C /* Heap */,
				0E1159CB290FAB04005F573C /* BinarySearchTree */,
				0EB326CE28BC833200DD597C /* LinkedList */,
				0EFDA3BC28D564DA009C424D /* Stack */,
				0EF534E528EBEB7A0023A8DB /* BinarySearch */,
				0E94DD802B4D691300C7C118 /* DP */,
				0E18A58D2B7794A5002A7311 /* String */,
				0E077A852B70FA8500FDE0E9 /* Sorting */,
				0E65812F2B705E1E00BE3C59 /* Math */,
				0EC9C2C52B668EEE0062956C /* Other Algorithms */,
				0E7E09E22B7C40E000ACC593 /* Array */,
				0EC97E462B8731C4009E7C84 /* Graph */,
				0EC89C6928DB782400ABC524 /* DecodeString.swift */,
				0E79D2F628E4B73000B85F22 /* PivotArray.swift */,
				0E79D2F828E4BA0A00B85F22 /* MaxWidthOfVerticalArea.swift */,
				0E5FFA9F28E6094200EB8C00 /* SearchMatrix.swift */,
				0E613B9728E98F1C0050D79B /* SetZeroes.swift */,
				0E2B99DF28F9A0AF0080561E /* JudgeSquareSum.swift */,
				0E2B99E128FC6F0C0080561E /* MaxDistance.swift */,
				0E3CDA4E2913F8DC0094D139 /* IsStrictlyPalindromic.swift */,
				0EB8CBC2292FE115003AF795 /* MinSetSize.swift */,
				0E6580FF2B6BF4D300BE3C59 /* DivideArrayIntoArraysWithMaxDifference.swift */,
				0E6581012B6D71CE00BE3C59 /* SequentialDigits.swift */,
			);
			path = Medium;
			sourceTree = "<group>";
		};
		0EED057C289A9FA9006F6FC2 /* Hard */ = {
			isa = PBXGroup;
			children = (
				0E65811F2B70237B00BE3C59 /* Sliding Window */,
				0E6580FC2B6B847E00BE3C59 /* Tree */,
				0E3582722B659BAF00EE03BB /* Dynamic Programming */,
				0E68C1782B53113300AF6B1D /* FindSubstring.swift */,
				0EC97E302B82C008009E7C84 /* MeetingRoomsIII.swift */,
				0EA44E262B8BFBFF000316C9 /* FindAllPeopleWithSecret.swift */,
				0EA44E282B8CE7A9000316C9 /* GreatestCommonDivisorTraversal.swift */,
			);
			path = Hard;
			sourceTree = "<group>";
		};
		0EED057D289A9FB8006F6FC2 /* In Progress */ = {
			isa = PBXGroup;
			children = (
				0EED057E289A9FC8006F6FC2 /* Easy */,
				0EED0580289A9FD5006F6FC2 /* Medium */,
				0EED057F289A9FD0006F6FC2 /* Hard */,
			);
			path = "In Progress";
			sourceTree = "<group>";
		};
		0EED057E289A9FC8006F6FC2 /* Easy */ = {
			isa = PBXGroup;
			children = (
			);
			path = Easy;
			sourceTree = "<group>";
		};
		0EED057F289A9FD0006F6FC2 /* Hard */ = {
			isa = PBXGroup;
			children = (
			);
			path = Hard;
			sourceTree = "<group>";
		};
		0EED0580289A9FD5006F6FC2 /* Medium */ = {
			isa = PBXGroup;
			children = (
			);
			path = Medium;
			sourceTree = "<group>";
		};
		0EF534DE28EBDC380023A8DB /* BinarySearch */ = {
			isa = PBXGroup;
			children = (
				0EF534DF28EBDC780023A8DB /* SearchBinary.swift */,
				0EF534E128EBE1CA0023A8DB /* GuessNumber.swift */,
				0EF534E328EBE49D0023A8DB /* SearchInsert.swift */,
				0EF534EA28EDA2790023A8DB /* IsPerfectSquare.swift */,
				0EF534EC28EDABBA0023A8DB /* FindTheDistanceValue.swift */,
				0EABD2FF28CDBE7E00415039 /* Sqrt.swift */,
				0E75B1FE28F01DF500627484 /* NextGreatestLetter.swift */,
				0EF534EE28EDCFE60023A8DB /* FirstBadVersion.swift */,
				0E71D62228F2A9B0004F5F84 /* ArrangeCoins.swift */,
				0E71D66A28F50CD2004F5F84 /* FindKthPositive.swift */,
				0E71D66C28F5CBCD004F5F84 /* SpecialArray.swift */,
				0EEED4D028F64B0A0073235A /* CountNegatives.swift */,
				0E2B99DB28F98EE70080561E /* KWeakestRows.swift */,
				0E2B99DD28F99DF40080561E /* CheckIfExist.swift */,
			);
			path = BinarySearch;
			sourceTree = "<group>";
		};
		0EF534E528EBEB7A0023A8DB /* BinarySearch */ = {
			isa = PBXGroup;
			children = (
				0EF534E628EBEB9F0023A8DB /* PeakIndexInMountainArray.swift */,
				0EF534F028EDD4BE0023A8DB /* SearchRange.swift */,
				0E05DB1328FDBA84008A8450 /* SearchRotatedArray.swift */,
				0E05DB1528FF0A2A008A8450 /* FindMin.swift */,
				0E95CCFE2B551DC000C5AB8A /* SearchRotatedArray2.swift */,
			);
			path = BinarySearch;
			sourceTree = "<group>";
		};
		0EFDA3BC28D564DA009C424D /* Stack */ = {
			isa = PBXGroup;
			children = (
				0EFDA3BD28D564F5009C424D /* GetMin.swift */,
				0E05DB1B29006F48008A8450 /* EvalRPN.swift */,
				0E05DB1D2901BFF6008A8450 /* DailyTemperatures.swift */,
				0E05DB1F29025B75008A8450 /* ScoreOfParentheses.swift */,
			);
			path = Stack;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		0E04720D288FB1B900D2F087 /* LeetCode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0E047215288FB1B900D2F087 /* Build configuration list for PBXNativeTarget "LeetCode" */;
			buildPhases = (
				0E04720A288FB1B900D2F087 /* Sources */,
				0E04720B288FB1B900D2F087 /* Frameworks */,
				0E04720C288FB1B900D2F087 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCode;
			productName = LeetCode;
			productReference = 0E04720E288FB1B900D2F087 /* LeetCode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		0E047206288FB1B900D2F087 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1340;
				LastUpgradeCheck = 1340;
				TargetAttributes = {
					0E04720D288FB1B900D2F087 = {
						CreatedOnToolsVersion = 13.4.1;
					};
				};
			};
			buildConfigurationList = 0E047209288FB1B900D2F087 /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 13.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 0E047205288FB1B900D2F087;
			productRefGroup = 0E04720F288FB1B900D2F087 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				0E04720D288FB1B900D2F087 /* LeetCode */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		0E04720A288FB1B900D2F087 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0E95CD382B5D574600C5AB8A /* NumTrees.swift in Sources */,
				0E9C37462920161500DD5D39 /* IncreasingBST.swift in Sources */,
				0E1159D0290FAE0E005F573C /* InorderTraversal.swift in Sources */,
				0E94DD822B4D693B00C7C118 /* UniquePaths.swift in Sources */,
				0EC97E312B82C008009E7C84 /* MeetingRoomsIII.swift in Sources */,
				0EC97E452B872B4B009E7C84 /* TownJudge.swift in Sources */,
				0EC97E2F2B8144B5009E7C84 /* FurthestBuildingYouCanReach.swift in Sources */,
				0E0697F428CAEEBB008DF1BC /* SwapPairs.swift in Sources */,
				0E68C1752B51ACAB00AF6B1D /* DeleteNode.swift in Sources */,
				0E1159C6290E833E005F573C /* ContainsNearbyDuplicate.swift in Sources */,
				0E05DB1A29005F88008A8450 /* CalPoints.swift in Sources */,
				0E95CD072B56907400C5AB8A /* XorOperation.swift in Sources */,
				0E71D62328F2A9B0004F5F84 /* ArrangeCoins.swift in Sources */,
				0EC9C2CB2B67B93D0062956C /* RecoverTree.swift in Sources */,
				0E613B9A28E9F33B0050D79B /* LastStoneWeight.swift in Sources */,
				0EC9C2C72B668F020062956C /* FindDuplicateNumber.swift in Sources */,
				0E3122AB2C3D5D3B001B3464 /* AverageWaitingTime.swift in Sources */,
				0EC9C2C92B670BD30062956C /* GenerateTrees.swift in Sources */,
				0EBA13512C1488F4001CABA1 /* CheckSubarraySum.swift in Sources */,
				0E7938F128E35B24008B5966 /* HammingWeight.swift in Sources */,
				0EFDA3BB28D4DC9C009C424D /* JudgeCircle.swift in Sources */,
				0E05DB1C29006F48008A8450 /* EvalRPN.swift in Sources */,
				0ED93836292A1DF6005D4A6C /* InsertIntoBSTAVL.swift in Sources */,
				0E18A58A2B765024002A7311 /* LargestDivisibleSubset.swift in Sources */,
				0E95CD322B5C25A000C5AB8A /* EvaluateTree.swift in Sources */,
				0E68F94728DD4E0500C4BCDF /* AddDigits.swift in Sources */,
				0E3582772B66743900EE03BB /* DefuseBomb.swift in Sources */,
				0E95CD362B5C9D2600C5AB8A /* RobHouse.swift in Sources */,
				0E6580FB2B6AF98700BE3C59 /* MinDepth.swift in Sources */,
				0E2543312B730ADD0017DBF4 /* SortCharactersByFrequency.swift in Sources */,
				0E35826B2B6044A000EE03BB /* MaxLength.swift in Sources */,
				0E9C373A29179A8300DD5D39 /* RangeSumBST.swift in Sources */,
				0E95CD252B57DAAA00C5AB8A /* UniqueOccurrences.swift in Sources */,
				0E95CD022B55511000C5AB8A /* FindWinners.swift in Sources */,
				0E047212288FB1B900D2F087 /* main.swift in Sources */,
				0E35826D2B60C38000EE03BB /* PseudoPalindromicPaths.swift in Sources */,
				0E9C3744291E062100DD5D39 /* SumEvenGrandparent.swift in Sources */,
				0EA44E232B8AB9B1000316C9 /* FindPathExists.swift in Sources */,
				0E7E09D72B79AB3F00ACC593 /* RadixSort.swift in Sources */,
				0ED9382C2922C3A9005D4A6C /* BuildTree.swift in Sources */,
				0EBA13212C0CA0D4001CABA1 /* SingleNumberIII.swift in Sources */,
				0E6581212B70239300BE3C59 /* MinWindow.swift in Sources */,
				0ED9382F2922C687005D4A6C /* FindTheDifference.swift in Sources */,
				0EB326D028BC836300DD597C /* DeleteMiddleNode.swift in Sources */,
				0E6581312B70654700BE3C59 /* FirstUniqChar.swift in Sources */,
				0E18A5862B75913D002A7311 /* MergeIntervals.swift in Sources */,
				0E68F94B28DDEA9500C4BCDF /* ConvertToBase7.swift in Sources */,
				0EA489DF2C368B8800B588EF /* MergeNodes.swift in Sources */,
				0E0EBEA2293F862B00C9F071 /* HasPathSum.swift in Sources */,
				0E9C373E291AE34600DD5D39 /* IsToeplitzMatrix.swift in Sources */,
				0E95CD302B5B640500C5AB8A /* SumSubarrayMins.swift in Sources */,
				0E05DB1628FF0A2A008A8450 /* FindMin.swift in Sources */,
				0EFDA3C028D56529009C424D /* Stack.swift in Sources */,
				0E2A552228DA0AB900A5ACE1 /* CountMatches.swift in Sources */,
				0E2A551928D8C9DA00A5ACE1 /* MyQueue.swift in Sources */,
				0E25433B2B74E9130017DBF4 /* PerfectSquares.swift in Sources */,
				0E95CD052B568BCF00C5AB8A /* ReverseBits.swift in Sources */,
				0E18A58F2B77F736002A7311 /* BasicCalculatorII.swift in Sources */,
				0E05DB242907EB4D008A8450 /* BackspaceCompare.swift in Sources */,
				0E65812C2B7058D200BE3C59 /* ThirdMax.swift in Sources */,
				0E2B99E228FC6F0C0080561E /* MaxDistance.swift in Sources */,
				0E9C37482921618600DD5D39 /* BstToGst.swift in Sources */,
				0E6C1AB428E2042D009FC596 /* NumOfStrings.swift in Sources */,
				0EB8981A28B46FA900D269E0 /* DeleteDuplicatesLinkedList.swift in Sources */,
				0EF1DF4D28D6B4100044FEBD /* ReorderList.swift in Sources */,
				0E74E3472C326254007CECD7 /* ThreeConsecutiveOdds.swift in Sources */,
				0EA917812C33DBDB009A1D0D /* IntersectionTwoArrays.swift in Sources */,
				0E3582692B5F2E2B00EE03BB /* GenerateParentheses.swift in Sources */,
				0EC97E482B8731E5009E7C84 /* AllPathsFromSourceTarget.swift in Sources */,
				0E65811E2B6EEFE400BE3C59 /* MaxSumAfterPartitioning.swift in Sources */,
				0ECF33142C1E1FBD002553E1 /* MinIncrementForUnique.swift in Sources */,
				0EB8CBC829338F54003AF795 /* Graph.swift in Sources */,
				0EC97E332B852AAC009E7C84 /* MissingNumber.swift in Sources */,
				0EEED4D128F64B0A0073235A /* CountNegatives.swift in Sources */,
				0E7E0A0A2B7D912C00ACC593 /* PolygonWithLargestPerimeter.swift in Sources */,
				0EA44E332B8FC4BD000316C9 /* FindBottomLeftTreeValue.swift in Sources */,
				0E0EBEA429405F6800C9F071 /* BinaryTreePaths.swift in Sources */,
				0EC97E2A2B80FDAD009E7C84 /* ApplyOperationstoMakeStringEmpty.swift in Sources */,
				0E077A902B725A2F00FDE0E9 /* SumRootToLeafNumbers.swift in Sources */,
				0E664ECA2C0572CE005C397A /* EqualSubstring.swift in Sources */,
				0E6581002B6BF4D300BE3C59 /* DivideArrayIntoArraysWithMaxDifference.swift in Sources */,
				0E04C4772C4AF8D900919390 /* LuckyNumbers.swift in Sources */,
				0E5FFAA028E6094200EB8C00 /* SearchMatrix.swift in Sources */,
				0E613B9628E8A14A0050D79B /* DiagonalSum.swift in Sources */,
				0E79D2F928E4BA0A00B85F22 /* MaxWidthOfVerticalArea.swift in Sources */,
				0E25432A2B72C8410017DBF4 /* HeapSort.swift in Sources */,
				0E75B1FF28F01DF500627484 /* NextGreatestLetter.swift in Sources */,
				0EDABC58293E75BE00612263 /* MaxDepth.swift in Sources */,
				0EB326DA28BDCA9000DD597C /* PalindromeLinkedList.swift in Sources */,
				0E95CD2B2B59CEAA00C5AB8A /* ClimbStairs.swift in Sources */,
				0E7E0A0C2B7F8BAF00ACC593 /* LeastNumberUniqueIntegers.swift in Sources */,
				0E95CD0B2B56A0C800C5AB8A /* RandomizedSet.swift in Sources */,
				0E077A8C2B71A57900FDE0E9 /* SelectionSort.swift in Sources */,
				0E5B5ADD2BFE6EB000BBAC2D /* PalindromePartitioning.swift in Sources */,
				0E35826F2B630DC200EE03BB /* LongestCommonSubsequence.swift in Sources */,
				0EBBB7BC28D161F700E8FD5E /* ReverseLinkedList.swift in Sources */,
				0ED9383229267C92005D4A6C /* FinalValueAfterOperations.swift in Sources */,
				0E95CCFF2B551DC000C5AB8A /* SearchRotatedArray2.swift in Sources */,
				0EB8981C28B4750300D269E0 /* DeleteDuplicatesLinkedList2.swift in Sources */,
				0E2B99DC28F98EE70080561E /* KWeakestRows.swift in Sources */,
				0EABD30028CDBE7E00415039 /* Sqrt.swift in Sources */,
				0E6581232B7034ED00BE3C59 /* MinHeap.swift in Sources */,
				0EBA134E2C136B9D001CABA1 /* ReplaceWords.swift in Sources */,
				0EB326D628BDADFF00DD597C /* AddTwoNumbers.swift in Sources */,
				0E05DB1428FDBA84008A8450 /* SearchRotatedArray.swift in Sources */,
				0E65812E2B705B8700BE3C59 /* NthUglyNumber.swift in Sources */,
				0E2543332B7318190017DBF4 /* MergeSort.swift in Sources */,
				0E6581252B70521E00BE3C59 /* FindKthLargest.swift in Sources */,
				0E613B9428E723900050D79B /* MaxNumberOfBalloons.swift in Sources */,
				0EF534F128EDD4BE0023A8DB /* SearchRange.swift in Sources */,
				0E077A922B7266CA00FDE0E9 /* InsertionSort.swift in Sources */,
				0EF534E428EBE49D0023A8DB /* SearchInsert.swift in Sources */,
				0EA44E2B2B8CFFDF000316C9 /* RemoveDuplicatesfromSortedArrayII.swift in Sources */,
				0E077A872B70FAA200FDE0E9 /* SortColors.swift in Sources */,
				0EB8CBCD2935D0EB003AF795 /* LevelOrder.swift in Sources */,
				0EB326D428BDA4C600DD597C /* PartitionList.swift in Sources */,
				0E2543352B73B8850017DBF4 /* QuickSort.swift in Sources */,
				0E1372892939DA1A004445B1 /* ZigzagLevelOrder.swift in Sources */,
				0EA44E2D2B8D47B6000316C9 /* FactorialTrailingZeroes.swift in Sources */,
				0EA489E12C39016E00B588EF /* PassThePillow.swift in Sources */,
				0E2B99E028F9A0AF0080561E /* JudgeSquareSum.swift in Sources */,
				0E2A551C28D8CE9000A5ACE1 /* MyStack.swift in Sources */,
				0EC97E2C2B81040E009E7C84 /* Maximum Number of Operations With the Same Score II.swift in Sources */,
				0E2A551E28D8CF4800A5ACE1 /* Queue.swift in Sources */,
				0E7E09E62B7CDE0400ACC593 /* LRUCache.swift in Sources */,
				0EC97E282B80FBBD009E7C84 /* MaximumNumberOperationsWithSameScore.swift in Sources */,
				0E4F83C12C2C54D800AA22BD /* BalanceBST.swift in Sources */,
				0EA44E252B8BC0B9000316C9 /* CheapestFlightsWithinKStops.swift in Sources */,
				0E25432D2B72DD1E0017DBF4 /* MergeSortedArray.swift in Sources */,
				0ED9383429295BE9005D4A6C /* MaximumWealth.swift in Sources */,
				0EA44E292B8CE7A9000316C9 /* GreatestCommonDivisorTraversal.swift in Sources */,
				0E1159CD290FAB1D005F573C /* IsValidBST.swift in Sources */,
				0E9C3740291BD4CE00DD5D39 /* SumRootToLeaf.swift in Sources */,
				0E06B5E1290A95A800A2782B /* RemoveAdjacentDuplicates.swift in Sources */,
				0E6581292B70558000BE3C59 /* MaxHeap.swift in Sources */,
				0E74E3432C302768007CECD7 /* GetAncestors.swift in Sources */,
				0EB8CBC3292FE115003AF795 /* MinSetSize.swift in Sources */,
				0E1159D2291181C0005F573C /* PreorderTraversal.swift in Sources */,
				0EA44E2F2B8DE2F3000316C9 /* DiameterBinaryTree.swift in Sources */,
				0E68C1792B53113300AF6B1D /* FindSubstring.swift in Sources */,
				0E077A8A2B70FF9F00FDE0E9 /* BubbleSort.swift in Sources */,
				0E077A8E2B72238C00FDE0E9 /* GroupAnagrams.swift in Sources */,
				0E05DB1E2901BFF6008A8450 /* DailyTemperatures.swift in Sources */,
				0E95CD2E2B5AE44900C5AB8A /* MinFallingPathSum.swift in Sources */,
				0E35825E2B5DEA7500EE03BB /* SetMismatch.swift in Sources */,
				0E7E09DD2B7AF36300ACC593 /* FindFirstPalindromicString.swift in Sources */,
				0E9C373829152DD900DD5D39 /* AverageOfSubtree.swift in Sources */,
				0E95CD102B56E3BD00C5AB8A /* SingleNumber.swift in Sources */,
				0EBA131F2C0C9EF9001CABA1 /* ScoreOfString.swift in Sources */,
				0EF534DB28EB3B8E0023A8DB /* CheckAlmostEquivalent.swift in Sources */,
				0E0697F228C9B957008DF1BC /* MergeTwoSortedLists.swift in Sources */,
				0E9C3742291BDD5800DD5D39 /* CheckTree.swift in Sources */,
				0EBB251029425A37005BEABE /* PathSum.swift in Sources */,
				0EA489DD2C358C8E00B588EF /*  MinimumDifferenceBetweenLargestSmallest3.swift in Sources */,
				0E9C373C291962F300DD5D39 /* SearchBST.swift in Sources */,
				0EA44E312B8DEAA5000316C9 /* Number of Islands.swift in Sources */,
				0E5B5ADF2C00A0FF00BBAC2D /* Subsets.swift in Sources */,
				0E6580FE2B6B849E00BE3C59 /* BinaryTreeMaximumPathSum.swift in Sources */,
				0E7E09D92B7A26C600ACC593 /* MajorityElement.swift in Sources */,
				0E05DB262907EE6B008A8450 /* RemoveOuterParentheses.swift in Sources */,
				0EBA13002C07AC69001CABA1 /* NumSteps.swift in Sources */,
				0EF534EB28EDA2790023A8DB /* IsPerfectSquare.swift in Sources */,
				0E3582742B659BC200EE03BB /* KInversePairs.swift in Sources */,
				0E71D66D28F5CBCD004F5F84 /* SpecialArray.swift in Sources */,
				0E3CDA4F2913F8DC0094D139 /* IsStrictlyPalindromic.swift in Sources */,
				0E3582712B63F6E500EE03BB /* OutBoundaryPaths.swift in Sources */,
				0E1159D62912A413005F573C /* PostOrderTraversal.swift in Sources */,
				0EC89C6A28DB782400ABC524 /* DecodeString.swift in Sources */,
				0E9C37362915226400DD5D39 /* DeepestLeavesSum.swift in Sources */,
				0EA44E392B9001E5000316C9 /* EvenOddTree.swift in Sources */,
				0E68F94F28E0B80000C4BCDF /* IsPowerOfTwo.swift in Sources */,
				0E95CD342B5C2D7000C5AB8A /* MergeTrees.swift in Sources */,
				0E7E09E42B7C40F500ACC593 /* RearrangeArrayElements.swift in Sources */,
				0E18A58C2B778DEE002A7311 /* PalindromicSubstrings.swift in Sources */,
				0EBA13482C0ED0F0001CABA1 /* LongestPalindromeEasy.swift in Sources */,
				0EBBB7BE28D166FF00E8FD5E /* KthDistinctString.swift in Sources */,
				0E137282293863D0004445B1 /* IsSameTree.swift in Sources */,
				0E0C53192C44D59900935F55 /* CreateBinaryTree.swift in Sources */,
				0EA9D7DA28CF742E0051F73E /* RemoveElements.swift in Sources */,
				0E95CD0E2B56E0E100C5AB8A /* MinBitFlips.swift in Sources */,
				0E7E09D52B799D4700ACC593 /* TopKFrequentElements.swift in Sources */,
				0E05DB2029025B75008A8450 /* ScoreOfParentheses.swift in Sources */,
				0E25432F2B72FF8E0017DBF4 /* SortArray.swift in Sources */,
				0E18A5912B794BFA002A7311 /* CherryPickupII.swift in Sources */,
				0E613B9828E98F1C0050D79B /* SetZeroes.swift in Sources */,
				0E6581342B7066C400BE3C59 /* IsUgly.swift in Sources */,
				0EB8981828B46DF000D269E0 /* ListNode.swift in Sources */,
				0EBB251329451253005BEABE /* Interpret.swift in Sources */,
				0E79D2F728E4B73000B85F22 /* PivotArray.swift in Sources */,
				0E5B5ADB2BF5E2EB00BBAC2D /* CombinationSum.swift in Sources */,
				0E6581022B6D71CE00BE3C59 /* SequentialDigits.swift in Sources */,
				0E0E4ADA290C209600138BB8 /* FinalPrices.swift in Sources */,
				0E2A552028D8D55500A5ACE1 /* MinTimeToType.swift in Sources */,
				0E68F94D28DF633700C4BCDF /* CanMakeArithmeticProgression.swift in Sources */,
				0E850DF128BF1A6A005C6923 /* IntersectionLinkedLists.swift in Sources */,
				0E1159CA290FAAC3005F573C /* BinarySearchTree.swift in Sources */,
				0EF534E028EBDC780023A8DB /* SearchBinary.swift in Sources */,
				0EBBB7B828D0E40100E8FD5E /* FindFinalValue.swift in Sources */,
				0EABD2FA28CCD3C200415039 /* LongestPalindrome.swift in Sources */,
				0EA44E352B8FE6F9000316C9 /* SurroundedRegions.swift in Sources */,
				0E71D66B28F50CD2004F5F84 /* FindKthPositive.swift in Sources */,
				0E0697F028C9B802008DF1BC /* Has3Divisors.swift in Sources */,
				0EF534E728EBEB9F0023A8DB /* PeakIndexInMountainArray.swift in Sources */,
				0EB8CBCB29339B59003AF795 /* FindCenter.swift in Sources */,
				0EFDA3BE28D564F5009C424D /* GetMin.swift in Sources */,
				0E3122AD2C3E6FEF001B3464 /* CrawlerLogFolder.swift in Sources */,
				0EBA134A2C11E18E001CABA1 /* CommonChars.swift in Sources */,
				0EC89C6C28DB7D8D00ABC524 /* SummaryRanges.swift in Sources */,
				0EF534E228EBE1CA0023A8DB /* GuessNumber.swift in Sources */,
				0E2B99DE28F99DF40080561E /* CheckIfExist.swift in Sources */,
				0EBBB7BA28D0E69400E8FD5E /* DominantIndex.swift in Sources */,
				0E465C91293B4E84006CCDDF /* IsSymmetricTree.swift in Sources */,
				0E95CD282B57FC8200C5AB8A /* MaxDepthTree.swift in Sources */,
				0E68C1772B51B77B00AF6B1D /* OddEvenLinkedList.swift in Sources */,
				0EA44E372B8FF945000316C9 /* CloneGraph.swift in Sources */,
				0E95CD092B569F0400C5AB8A /* RangeBitwiseAnd.swift in Sources */,
				0E077A942B729B1A00FDE0E9 /* MaximumGap.swift in Sources */,
				0EA44E272B8BFBFF000316C9 /* FindAllPeopleWithSecret.swift in Sources */,
				0EF534EF28EDCFE60023A8DB /* FirstBadVersion.swift in Sources */,
				0EABD2FC28CCE5D400415039 /* Extensions.swift in Sources */,
				0EBBB7B628D0E1BB00E8FD5E /* DivideArray.swift in Sources */,
				0EC9C2CD2B67D8680062956C /* ConstructBinaryTreeFromInorderPostorderTraversal.swift in Sources */,
				0EF534ED28EDABBA0023A8DB /* FindTheDistanceValue.swift in Sources */,
				0EB8CBC629321A85003AF795 /* FindTheWinner.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		0E047213288FB1B900D2F087 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		0E047214288FB1B900D2F087 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++17";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		0E047216288FB1B900D2F087 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = XZC5KA67TU;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		0E047217288FB1B900D2F087 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = XZC5KA67TU;
				ENABLE_HARDENED_RUNTIME = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		0E047209288FB1B900D2F087 /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0E047213288FB1B900D2F087 /* Debug */,
				0E047214288FB1B900D2F087 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		0E047215288FB1B900D2F087 /* Build configuration list for PBXNativeTarget "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0E047216288FB1B900D2F087 /* Debug */,
				0E047217288FB1B900D2F087 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 0E047206288FB1B900D2F087 /* Project object */;
}
